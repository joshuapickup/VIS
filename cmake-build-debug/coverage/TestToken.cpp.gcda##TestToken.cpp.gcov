        -:    0:Source:D:/Project Workspace/Year3/VIS/tests/TestToken.cpp
        -:    0:Graph:D:\Project Workspace\Year3\VIS\cmake-build-debug\tests\CMakeFiles\vis_tests.dir\TestToken.cpp.gcno
        -:    0:Data:D:\Project Workspace\Year3\VIS\cmake-build-debug\tests\CMakeFiles\vis_tests.dir\TestToken.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <gtest/gtest.h>
        -:    2:#include "Token.h"
        -:    3:#include "TestHelpers.h"
        -:    4:
        4:    5:TEST(TokenTest, CreatesIntTokenCorrectly) {
        1:    6:    Token token(TokenType::INT, dummyPos, 42);
       1*:    7:    EXPECT_EQ(token.getType(), TokenType::INT);
       1*:    8:    EXPECT_EQ(std::get<int>(token.getValue()), 42);
       3*:    9:    EXPECT_EQ(token.getPos()["line"], "0");
       3*:   10:    EXPECT_EQ(token.getPos()["charPos"], "0");
        1:   11:}
------------------
_ZN39TokenTest_CreatesIntTokenCorrectly_TestC1Ev:
function _ZN39TokenTest_CreatesIntTokenCorrectly_TestC1Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(TokenTest, CreatesIntTokenCorrectly) {
        1:    5-block  0
call    0 returned 1
------------------
_ZN39TokenTest_CreatesIntTokenCorrectly_TestD0Ev:
function _ZN39TokenTest_CreatesIntTokenCorrectly_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(TokenTest, CreatesIntTokenCorrectly) {
        1:    5-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN39TokenTest_CreatesIntTokenCorrectly_TestD1Ev:
function _ZN39TokenTest_CreatesIntTokenCorrectly_TestD1Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(TokenTest, CreatesIntTokenCorrectly) {
        1:    5-block  0
call    0 returned 1
------------------
_ZN39TokenTest_CreatesIntTokenCorrectly_Test8TestBodyEv:
function _ZN39TokenTest_CreatesIntTokenCorrectly_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:    5:TEST(TokenTest, CreatesIntTokenCorrectly) {
        1:    6:    Token token(TokenType::INT, dummyPos, 42);
        1:    6-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    6-block  1
call    4 returned 1
    $$$$$:    6-block  2
call    5 never executed
    $$$$$:    6-block  3
    $$$$$:    6-block  4
       1*:    7:    EXPECT_EQ(token.getType(), TokenType::INT);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    7-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:    7-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:    7-block  2
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:    7-block  3
call   12 never executed
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:    7-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:    7-block  5
call   19 never executed
call   20 never executed
        1:    7-block  6
call   21 returned 1
    $$$$$:    7-block  7
    $$$$$:    7-block  8
    $$$$$:    7-block  9
call   22 never executed
    $$$$$:    7-block 10
    $$$$$:    7-block 11
call   23 never executed
    $$$$$:    7-block 12
    $$$$$:    7-block 13
call   24 never executed
       1*:    8:    EXPECT_EQ(std::get<int>(token.getValue()), 42);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    8-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:    8-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:    8-block  2
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:    8-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:    8-block  4
call   16 never executed
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:    8-block  5
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:    8-block  6
call   23 never executed
call   24 never executed
        1:    8-block  7
call   25 returned 1
    $$$$$:    8-block  8
call   26 never executed
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
call   27 never executed
    $$$$$:    8-block 12
    $$$$$:    8-block 13
call   28 never executed
    $$$$$:    8-block 14
    $$$$$:    8-block 15
call   29 never executed
       3*:    9:    EXPECT_EQ(token.getPos()["line"], "0");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    9-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:    9-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:    9-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:    9-block  3
call   12 returned 1
call   13 returned 1
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    %%%%%:    9-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:    9-block  5
call   20 never executed
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:    9-block  6
call   24 never executed
branch 25 never executed (fallthrough)
branch 26 never executed (throw)
    %%%%%:    9-block  7
call   27 never executed
call   28 never executed
        1:    9-block  8
call   29 returned 1
    $$$$$:    9-block  9
call   30 never executed
    $$$$$:    9-block 10
    $$$$$:    9-block 11
    $$$$$:    9-block 12
call   31 never executed
    $$$$$:    9-block 13
    $$$$$:    9-block 14
call   32 never executed
    $$$$$:    9-block 15
    $$$$$:    9-block 16
call   33 never executed
    $$$$$:    9-block 17
    $$$$$:    9-block 18
call   34 never executed
       3*:   10:    EXPECT_EQ(token.getPos()["charPos"], "0");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   10-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   10-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   10-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   10-block  3
call   12 returned 1
call   13 returned 1
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    %%%%%:   10-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   10-block  5
call   20 never executed
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:   10-block  6
call   24 never executed
branch 25 never executed (fallthrough)
branch 26 never executed (throw)
    %%%%%:   10-block  7
call   27 never executed
call   28 never executed
        1:   10-block  8
call   29 returned 1
    $$$$$:   10-block  9
call   30 never executed
    $$$$$:   10-block 10
    $$$$$:   10-block 11
    $$$$$:   10-block 12
call   31 never executed
    $$$$$:   10-block 13
    $$$$$:   10-block 14
call   32 never executed
    $$$$$:   10-block 15
    $$$$$:   10-block 16
call   33 never executed
    $$$$$:   10-block 17
    $$$$$:   10-block 18
call   34 never executed
        1:   11:}
call    0 returned 1
    $$$$$:   11-block  0
call    1 never executed
------------------
        -:   12:
        4:   13:TEST(TokenUtilTest, TokenTypeToStrExpected) {
       28:   14:    for (TokenType type : allTokenTypes) {
       27:   15:        std::string str = tokenTypeToStr(type);
      27*:   16:        EXPECT_NE(str, "UNKNOWN") << "tokenTypeToStr returned UNKNOWN for a valid TokenType: "
      27*:   17:                                  << static_cast<int>(type);
       27:   18:    }
        1:   19:}
------------------
_ZN41TokenUtilTest_TokenTypeToStrExpected_TestC1Ev:
function _ZN41TokenUtilTest_TokenTypeToStrExpected_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(TokenUtilTest, TokenTypeToStrExpected) {
        1:   13-block  0
call    0 returned 1
------------------
_ZN41TokenUtilTest_TokenTypeToStrExpected_TestD0Ev:
function _ZN41TokenUtilTest_TokenTypeToStrExpected_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(TokenUtilTest, TokenTypeToStrExpected) {
        1:   13-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN41TokenUtilTest_TokenTypeToStrExpected_TestD1Ev:
function _ZN41TokenUtilTest_TokenTypeToStrExpected_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(TokenUtilTest, TokenTypeToStrExpected) {
        1:   13-block  0
call    0 returned 1
------------------
_ZN41TokenUtilTest_TokenTypeToStrExpected_Test8TestBodyEv:
function _ZN41TokenUtilTest_TokenTypeToStrExpected_Test8TestBodyEv called 1 returned 100% blocks executed 39%
        1:   13:TEST(TokenUtilTest, TokenTypeToStrExpected) {
       28:   14:    for (TokenType type : allTokenTypes) {
        1:   14-block  0
call    0 returned 1
call    1 returned 1
       27:   14-block  1
call    2 returned 27
call    3 returned 27
       28:   14-block  2
call    4 returned 28
branch  5 taken 27
branch  6 taken 1 (fallthrough)
       27:   15:        std::string str = tokenTypeToStr(type);
call    0 returned 27
branch  1 taken 27 (fallthrough)
branch  2 taken 0 (throw)
      27*:   16:        EXPECT_NE(str, "UNKNOWN") << "tokenTypeToStr returned UNKNOWN for a valid TokenType: "
       27:   16-block  0
call    0 returned 27
branch  1 taken 27 (fallthrough)
branch  2 taken 0 (throw)
       27:   16-block  1
call    3 returned 27
branch  4 taken 0 (fallthrough)
branch  5 taken 27
    %%%%%:   16-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   16-block  3
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   16-block  4
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   16-block  5
call   18 never executed
    $$$$$:   16-block  6
call   19 never executed
    $$$$$:   16-block  7
    $$$$$:   16-block  8
call   20 never executed
    $$$$$:   16-block  9
      27*:   17:                                  << static_cast<int>(type);
    %%%%%:   17-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   17-block  1
call    3 never executed
call    4 never executed
       27:   17-block  2
call    5 returned 27
    $$$$$:   17-block  3
    $$$$$:   17-block  4
call    6 never executed
       27:   18:    }
call    0 returned 27
    $$$$$:   18-block  0
call    1 never executed
        1:   19:}
        1:   19-block  0
------------------
        -:   20:
        4:   21:TEST(TokenUtilTest, TokenTypeToStrInvalid) {
        1:   22:    TokenType invalid = static_cast<TokenType>(999);
        1:   23:    std::string str = tokenTypeToStr(invalid);
       1*:   24:    EXPECT_EQ(str, "UNKNOWN");
        1:   25:}
------------------
_ZN40TokenUtilTest_TokenTypeToStrInvalid_TestC1Ev:
function _ZN40TokenUtilTest_TokenTypeToStrInvalid_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   21:TEST(TokenUtilTest, TokenTypeToStrInvalid) {
        1:   21-block  0
call    0 returned 1
------------------
_ZN40TokenUtilTest_TokenTypeToStrInvalid_TestD0Ev:
function _ZN40TokenUtilTest_TokenTypeToStrInvalid_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   21:TEST(TokenUtilTest, TokenTypeToStrInvalid) {
        1:   21-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN40TokenUtilTest_TokenTypeToStrInvalid_TestD1Ev:
function _ZN40TokenUtilTest_TokenTypeToStrInvalid_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   21:TEST(TokenUtilTest, TokenTypeToStrInvalid) {
        1:   21-block  0
call    0 returned 1
------------------
_ZN40TokenUtilTest_TokenTypeToStrInvalid_Test8TestBodyEv:
function _ZN40TokenUtilTest_TokenTypeToStrInvalid_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:   21:TEST(TokenUtilTest, TokenTypeToStrInvalid) {
        1:   22:    TokenType invalid = static_cast<TokenType>(999);
        1:   23:    std::string str = tokenTypeToStr(invalid);
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   24:    EXPECT_EQ(str, "UNKNOWN");
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   24-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   24-block  3
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   24-block  4
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   24-block  5
call   16 never executed
call   17 never executed
        1:   24-block  6
call   18 returned 1
    $$$$$:   24-block  7
call   19 never executed
    $$$$$:   24-block  8
    $$$$$:   24-block  9
call   20 never executed
    $$$$$:   24-block 10
    $$$$$:   24-block 11
call   21 never executed
        1:   25:}
call    0 returned 1
    $$$$$:   25-block  0
call    1 never executed
------------------
        -:   26:
        4:   27:TEST(TokenTest, CloneProducesEqualToken) {
        1:   28:    Token original(TokenType::INT, dummyPos, 123);
        1:   29:    Token cloned = original.clone();
       1*:   30:    EXPECT_EQ(cloned.getType(), original.getType());
       1*:   31:    EXPECT_EQ(std::get<int>(cloned.getValue()), std::get<int>(original.getValue()));
       1*:   32:    EXPECT_EQ(cloned.getPos(), original.getPos());
        1:   33:}
------------------
_ZN38TokenTest_CloneProducesEqualToken_TestC1Ev:
function _ZN38TokenTest_CloneProducesEqualToken_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   27:TEST(TokenTest, CloneProducesEqualToken) {
        1:   27-block  0
call    0 returned 1
------------------
_ZN38TokenTest_CloneProducesEqualToken_TestD0Ev:
function _ZN38TokenTest_CloneProducesEqualToken_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   27:TEST(TokenTest, CloneProducesEqualToken) {
        1:   27-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN38TokenTest_CloneProducesEqualToken_TestD1Ev:
function _ZN38TokenTest_CloneProducesEqualToken_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   27:TEST(TokenTest, CloneProducesEqualToken) {
        1:   27-block  0
call    0 returned 1
------------------
_ZN38TokenTest_CloneProducesEqualToken_Test8TestBodyEv:
function _ZN38TokenTest_CloneProducesEqualToken_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:   27:TEST(TokenTest, CloneProducesEqualToken) {
        1:   28:    Token original(TokenType::INT, dummyPos, 123);
        1:   28-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   28-block  1
call    4 returned 1
    $$$$$:   28-block  2
call    5 never executed
    $$$$$:   28-block  3
    $$$$$:   28-block  4
        1:   29:    Token cloned = original.clone();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   30:    EXPECT_EQ(cloned.getType(), original.getType());
        1:   30-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   30-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   30-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   30-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   30-block  5
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   30-block  6
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   30-block  7
call   22 never executed
call   23 never executed
        1:   30-block  8
call   24 returned 1
    $$$$$:   30-block  9
    $$$$$:   30-block 10
    $$$$$:   30-block 11
call   25 never executed
    $$$$$:   30-block 12
    $$$$$:   30-block 13
call   26 never executed
    $$$$$:   30-block 14
    $$$$$:   30-block 15
call   27 never executed
       1*:   31:    EXPECT_EQ(std::get<int>(cloned.getValue()), std::get<int>(original.getValue()));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   31-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   31-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   31-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   31-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   31-block  4
call   15 returned 1
call   16 returned 1
call   17 returned 1
branch 18 taken 0 (fallthrough)
branch 19 taken 1
    %%%%%:   31-block  5
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:   31-block  6
call   23 never executed
call   24 never executed
branch 25 never executed (fallthrough)
branch 26 never executed (throw)
    %%%%%:   31-block  7
call   27 never executed
branch 28 never executed (fallthrough)
branch 29 never executed (throw)
    %%%%%:   31-block  8
call   30 never executed
call   31 never executed
        1:   31-block  9
call   32 returned 1
    $$$$$:   31-block 10
call   33 never executed
    $$$$$:   31-block 11
    $$$$$:   31-block 12
call   34 never executed
    $$$$$:   31-block 13
    $$$$$:   31-block 14
call   35 never executed
    $$$$$:   31-block 15
    $$$$$:   31-block 16
call   36 never executed
    $$$$$:   31-block 17
    $$$$$:   31-block 18
call   37 never executed
       1*:   32:    EXPECT_EQ(cloned.getPos(), original.getPos());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   32-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   32-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   32-block  2
call    9 returned 1
call   10 returned 1
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   32-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   32-block  4
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   32-block  5
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:   32-block  6
call   24 never executed
call   25 never executed
        1:   32-block  7
call   26 returned 1
    $$$$$:   32-block  8
call   27 never executed
    $$$$$:   32-block  9
    $$$$$:   32-block 10
call   28 never executed
    $$$$$:   32-block 11
    $$$$$:   32-block 12
call   29 never executed
    $$$$$:   32-block 13
    $$$$$:   32-block 14
call   30 never executed
    $$$$$:   32-block 15
    $$$$$:   32-block 16
call   31 never executed
        1:   33:}
call    0 returned 1
call    1 returned 1
    $$$$$:   33-block  0
call    2 never executed
    $$$$$:   33-block  1
call    3 never executed
------------------
        -:   34:
        4:   35:TEST(TokenTest, canOutputFloatToken) {
        1:   36:    Token token(TokenType::FLOAT, dummyPos, 3.14f);
        1:   37:    std::ostringstream oss;
        1:   38:    oss << token;
        1:   39:    std::string output = oss.str();
       1*:   40:    EXPECT_NE(output.find("Token(Type: FLOAT"), std::string::npos);
       1*:   41:    EXPECT_NE(output.find("line: 0"), std::string::npos);
       1*:   42:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
       1*:   43:    EXPECT_NE(output.find("3.14"), std::string::npos);
        1:   44:}
------------------
_ZN34TokenTest_canOutputFloatToken_TestC1Ev:
function _ZN34TokenTest_canOutputFloatToken_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(TokenTest, canOutputFloatToken) {
        1:   35-block  0
call    0 returned 1
------------------
_ZN34TokenTest_canOutputFloatToken_TestD0Ev:
function _ZN34TokenTest_canOutputFloatToken_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(TokenTest, canOutputFloatToken) {
        1:   35-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN34TokenTest_canOutputFloatToken_TestD1Ev:
function _ZN34TokenTest_canOutputFloatToken_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(TokenTest, canOutputFloatToken) {
        1:   35-block  0
call    0 returned 1
------------------
_ZN34TokenTest_canOutputFloatToken_Test8TestBodyEv:
function _ZN34TokenTest_canOutputFloatToken_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   35:TEST(TokenTest, canOutputFloatToken) {
        1:   36:    Token token(TokenType::FLOAT, dummyPos, 3.14f);
        1:   36-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   36-block  1
call    4 returned 1
    $$$$$:   36-block  2
call    5 never executed
    $$$$$:   36-block  3
    $$$$$:   36-block  4
        1:   37:    std::ostringstream oss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38:    oss << token;
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39:    std::string output = oss.str();
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   40:    EXPECT_NE(output.find("Token(Type: FLOAT"), std::string::npos);
        1:   40-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   40-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   40-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   40-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   40-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   40-block  5
call   17 never executed
call   18 never executed
        1:   40-block  6
call   19 returned 1
    $$$$$:   40-block  7
    $$$$$:   40-block  8
call   20 never executed
    $$$$$:   40-block  9
    $$$$$:   40-block 10
call   21 never executed
    $$$$$:   40-block 11
    $$$$$:   40-block 12
call   22 never executed
       1*:   41:    EXPECT_NE(output.find("line: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   41-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   41-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   41-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   41-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   41-block  4
call   17 never executed
call   18 never executed
        1:   41-block  5
call   19 returned 1
    $$$$$:   41-block  6
    $$$$$:   41-block  7
call   20 never executed
    $$$$$:   41-block  8
    $$$$$:   41-block  9
call   21 never executed
    $$$$$:   41-block 10
    $$$$$:   41-block 11
call   22 never executed
       1*:   42:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   42-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   42-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   42-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   42-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   42-block  4
call   17 never executed
call   18 never executed
        1:   42-block  5
call   19 returned 1
    $$$$$:   42-block  6
    $$$$$:   42-block  7
call   20 never executed
    $$$$$:   42-block  8
    $$$$$:   42-block  9
call   21 never executed
    $$$$$:   42-block 10
    $$$$$:   42-block 11
call   22 never executed
       1*:   43:    EXPECT_NE(output.find("3.14"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   43-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   43-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   43-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   43-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   43-block  4
call   17 never executed
call   18 never executed
        1:   43-block  5
call   19 returned 1
    $$$$$:   43-block  6
    $$$$$:   43-block  7
call   20 never executed
    $$$$$:   43-block  8
    $$$$$:   43-block  9
call   21 never executed
    $$$$$:   43-block 10
    $$$$$:   43-block 11
call   22 never executed
        1:   44:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   44-block  0
call    3 never executed
    $$$$$:   44-block  1
call    4 never executed
    $$$$$:   44-block  2
call    5 never executed
------------------
        -:   45:
        4:   46:TEST(TokenTest, canOutputIntToken) {
        1:   47:    Token token(TokenType::INT, dummyPos, 3);
        1:   48:    std::ostringstream oss;
        1:   49:    oss << token;
        1:   50:    std::string output = oss.str();
       1*:   51:    EXPECT_NE(output.find("Token(Type: INT"), std::string::npos);
       1*:   52:    EXPECT_NE(output.find("line: 0"), std::string::npos);
       1*:   53:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
       1*:   54:    EXPECT_NE(output.find("3"), std::string::npos);
        1:   55:}
------------------
_ZN32TokenTest_canOutputIntToken_TestC1Ev:
function _ZN32TokenTest_canOutputIntToken_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   46:TEST(TokenTest, canOutputIntToken) {
        1:   46-block  0
call    0 returned 1
------------------
_ZN32TokenTest_canOutputIntToken_TestD0Ev:
function _ZN32TokenTest_canOutputIntToken_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   46:TEST(TokenTest, canOutputIntToken) {
        1:   46-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN32TokenTest_canOutputIntToken_TestD1Ev:
function _ZN32TokenTest_canOutputIntToken_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   46:TEST(TokenTest, canOutputIntToken) {
        1:   46-block  0
call    0 returned 1
------------------
_ZN32TokenTest_canOutputIntToken_Test8TestBodyEv:
function _ZN32TokenTest_canOutputIntToken_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   46:TEST(TokenTest, canOutputIntToken) {
        1:   47:    Token token(TokenType::INT, dummyPos, 3);
        1:   47-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   47-block  1
call    4 returned 1
    $$$$$:   47-block  2
call    5 never executed
    $$$$$:   47-block  3
    $$$$$:   47-block  4
        1:   48:    std::ostringstream oss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49:    oss << token;
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50:    std::string output = oss.str();
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   51:    EXPECT_NE(output.find("Token(Type: INT"), std::string::npos);
        1:   51-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   51-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   51-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   51-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   51-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   51-block  5
call   17 never executed
call   18 never executed
        1:   51-block  6
call   19 returned 1
    $$$$$:   51-block  7
    $$$$$:   51-block  8
call   20 never executed
    $$$$$:   51-block  9
    $$$$$:   51-block 10
call   21 never executed
    $$$$$:   51-block 11
    $$$$$:   51-block 12
call   22 never executed
       1*:   52:    EXPECT_NE(output.find("line: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   52-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   52-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   52-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   52-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   52-block  4
call   17 never executed
call   18 never executed
        1:   52-block  5
call   19 returned 1
    $$$$$:   52-block  6
    $$$$$:   52-block  7
call   20 never executed
    $$$$$:   52-block  8
    $$$$$:   52-block  9
call   21 never executed
    $$$$$:   52-block 10
    $$$$$:   52-block 11
call   22 never executed
       1*:   53:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   53-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   53-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   53-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   53-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   53-block  4
call   17 never executed
call   18 never executed
        1:   53-block  5
call   19 returned 1
    $$$$$:   53-block  6
    $$$$$:   53-block  7
call   20 never executed
    $$$$$:   53-block  8
    $$$$$:   53-block  9
call   21 never executed
    $$$$$:   53-block 10
    $$$$$:   53-block 11
call   22 never executed
       1*:   54:    EXPECT_NE(output.find("3"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   54-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   54-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   54-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   54-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   54-block  4
call   17 never executed
call   18 never executed
        1:   54-block  5
call   19 returned 1
    $$$$$:   54-block  6
    $$$$$:   54-block  7
call   20 never executed
    $$$$$:   54-block  8
    $$$$$:   54-block  9
call   21 never executed
    $$$$$:   54-block 10
    $$$$$:   54-block 11
call   22 never executed
        1:   55:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   55-block  0
call    3 never executed
    $$$$$:   55-block  1
call    4 never executed
    $$$$$:   55-block  2
call    5 never executed
------------------
        -:   56:
        4:   57:TEST(TokenTest, canOutputStringToken) {
        1:   58:    Token token(TokenType::STRING, dummyPos, "hello");
        1:   59:    std::ostringstream oss;
        1:   60:    oss << token;
        1:   61:    std::string output = oss.str();
       1*:   62:    EXPECT_NE(output.find("Token(Type: STRING"), std::string::npos);
       1*:   63:    EXPECT_NE(output.find("line: 0"), std::string::npos);
       1*:   64:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
       1*:   65:    EXPECT_NE(output.find("hello"), std::string::npos);
        1:   66:}
------------------
_ZN35TokenTest_canOutputStringToken_TestC1Ev:
function _ZN35TokenTest_canOutputStringToken_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   57:TEST(TokenTest, canOutputStringToken) {
        1:   57-block  0
call    0 returned 1
------------------
_ZN35TokenTest_canOutputStringToken_TestD0Ev:
function _ZN35TokenTest_canOutputStringToken_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   57:TEST(TokenTest, canOutputStringToken) {
        1:   57-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN35TokenTest_canOutputStringToken_TestD1Ev:
function _ZN35TokenTest_canOutputStringToken_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   57:TEST(TokenTest, canOutputStringToken) {
        1:   57-block  0
call    0 returned 1
------------------
_ZN35TokenTest_canOutputStringToken_Test8TestBodyEv:
function _ZN35TokenTest_canOutputStringToken_Test8TestBodyEv called 1 returned 100% blocks executed 29%
        1:   57:TEST(TokenTest, canOutputStringToken) {
        1:   58:    Token token(TokenType::STRING, dummyPos, "hello");
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58-block  2
call    6 returned 1
    $$$$$:   58-block  3
call    7 never executed
    $$$$$:   58-block  4
        1:   59:    std::ostringstream oss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60:    oss << token;
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61:    std::string output = oss.str();
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   62:    EXPECT_NE(output.find("Token(Type: STRING"), std::string::npos);
        1:   62-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   62-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   62-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   62-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   62-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   62-block  5
call   17 never executed
call   18 never executed
        1:   62-block  6
call   19 returned 1
    $$$$$:   62-block  7
    $$$$$:   62-block  8
call   20 never executed
    $$$$$:   62-block  9
    $$$$$:   62-block 10
call   21 never executed
    $$$$$:   62-block 11
    $$$$$:   62-block 12
call   22 never executed
       1*:   63:    EXPECT_NE(output.find("line: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   63-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   63-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   63-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   63-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   63-block  4
call   17 never executed
call   18 never executed
        1:   63-block  5
call   19 returned 1
    $$$$$:   63-block  6
    $$$$$:   63-block  7
call   20 never executed
    $$$$$:   63-block  8
    $$$$$:   63-block  9
call   21 never executed
    $$$$$:   63-block 10
    $$$$$:   63-block 11
call   22 never executed
       1*:   64:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   64-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   64-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   64-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   64-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   64-block  4
call   17 never executed
call   18 never executed
        1:   64-block  5
call   19 returned 1
    $$$$$:   64-block  6
    $$$$$:   64-block  7
call   20 never executed
    $$$$$:   64-block  8
    $$$$$:   64-block  9
call   21 never executed
    $$$$$:   64-block 10
    $$$$$:   64-block 11
call   22 never executed
       1*:   65:    EXPECT_NE(output.find("hello"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   65-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   65-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   65-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   65-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   65-block  4
call   17 never executed
call   18 never executed
        1:   65-block  5
call   19 returned 1
    $$$$$:   65-block  6
    $$$$$:   65-block  7
call   20 never executed
    $$$$$:   65-block  8
    $$$$$:   65-block  9
call   21 never executed
    $$$$$:   65-block 10
    $$$$$:   65-block 11
call   22 never executed
        1:   66:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   66-block  0
call    3 never executed
    $$$$$:   66-block  1
call    4 never executed
    $$$$$:   66-block  2
call    5 never executed
------------------
        -:   67:
        4:   68:TEST(TokenTest, canOutputOperatorToken) {
        1:   69:    Token token(TokenType::PLUS, dummyPos);
        1:   70:    std::ostringstream oss;
        1:   71:    oss << token;
        1:   72:    std::string output = oss.str();
       1*:   73:    EXPECT_NE(output.find("Token(Type: PLUS"), std::string::npos);
       1*:   74:    EXPECT_NE(output.find("line: 0"), std::string::npos);
       1*:   75:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
       1*:   76:    EXPECT_NE(output.find("No value"), std::string::npos);
        1:   77:}
------------------
_ZN37TokenTest_canOutputOperatorToken_TestC1Ev:
function _ZN37TokenTest_canOutputOperatorToken_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   68:TEST(TokenTest, canOutputOperatorToken) {
        1:   68-block  0
call    0 returned 1
------------------
_ZN37TokenTest_canOutputOperatorToken_TestD0Ev:
function _ZN37TokenTest_canOutputOperatorToken_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   68:TEST(TokenTest, canOutputOperatorToken) {
        1:   68-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN37TokenTest_canOutputOperatorToken_TestD1Ev:
function _ZN37TokenTest_canOutputOperatorToken_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   68:TEST(TokenTest, canOutputOperatorToken) {
        1:   68-block  0
call    0 returned 1
------------------
_ZN37TokenTest_canOutputOperatorToken_Test8TestBodyEv:
function _ZN37TokenTest_canOutputOperatorToken_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   68:TEST(TokenTest, canOutputOperatorToken) {
        1:   69:    Token token(TokenType::PLUS, dummyPos);
        1:   69-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   69-block  1
call    4 returned 1
    $$$$$:   69-block  2
call    5 never executed
    $$$$$:   69-block  3
    $$$$$:   69-block  4
        1:   70:    std::ostringstream oss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71:    oss << token;
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72:    std::string output = oss.str();
        1:   72-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   73:    EXPECT_NE(output.find("Token(Type: PLUS"), std::string::npos);
        1:   73-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   73-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   73-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   73-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   73-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   73-block  5
call   17 never executed
call   18 never executed
        1:   73-block  6
call   19 returned 1
    $$$$$:   73-block  7
    $$$$$:   73-block  8
call   20 never executed
    $$$$$:   73-block  9
    $$$$$:   73-block 10
call   21 never executed
    $$$$$:   73-block 11
    $$$$$:   73-block 12
call   22 never executed
       1*:   74:    EXPECT_NE(output.find("line: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   74-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   74-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   74-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   74-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   74-block  4
call   17 never executed
call   18 never executed
        1:   74-block  5
call   19 returned 1
    $$$$$:   74-block  6
    $$$$$:   74-block  7
call   20 never executed
    $$$$$:   74-block  8
    $$$$$:   74-block  9
call   21 never executed
    $$$$$:   74-block 10
    $$$$$:   74-block 11
call   22 never executed
       1*:   75:    EXPECT_NE(output.find("Pos: 0"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   75-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   75-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   75-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   75-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   75-block  4
call   17 never executed
call   18 never executed
        1:   75-block  5
call   19 returned 1
    $$$$$:   75-block  6
    $$$$$:   75-block  7
call   20 never executed
    $$$$$:   75-block  8
    $$$$$:   75-block  9
call   21 never executed
    $$$$$:   75-block 10
    $$$$$:   75-block 11
call   22 never executed
       1*:   76:    EXPECT_NE(output.find("No value"), std::string::npos);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   76-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   76-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   76-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   76-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   76-block  4
call   17 never executed
call   18 never executed
        1:   76-block  5
call   19 returned 1
    $$$$$:   76-block  6
    $$$$$:   76-block  7
call   20 never executed
    $$$$$:   76-block  8
    $$$$$:   76-block  9
call   21 never executed
    $$$$$:   76-block 10
    $$$$$:   76-block 11
call   22 never executed
        1:   77:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   77-block  0
call    3 never executed
    $$$$$:   77-block  1
call    4 never executed
    $$$$$:   77-block  2
call    5 never executed
------------------
        -:   78:
