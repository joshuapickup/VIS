        -:    0:Source:D:/Project Workspace/Year3/VIS/tests/TestLexer.cpp
        -:    0:Graph:D:\Project Workspace\Year3\VIS\cmake-build-debug\tests\CMakeFiles\vis_tests.dir\TestLexer.cpp.gcno
        -:    0:Data:D:\Project Workspace\Year3\VIS\cmake-build-debug\tests\CMakeFiles\vis_tests.dir\TestLexer.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <Error.h>
        -:    2:#include <gtest/gtest.h>
        -:    3:#include <sstream>
        -:    4:#include "Lexer.h"
        -:    5:#include "Token.h"
        -:    6:
        -:    7:struct LexerInput {
        -:    8:    std::string input;
        -:    9:    TokenType expectedType;
        -:   10:    ValueLiteral expectedValue;
        -:   11:};
        -:   12:
        -:   13:class LexerTest : public ::testing::TestWithParam<LexerInput> {};
        -:   14:
     116*:   15:INSTANTIATE_TEST_SUITE_P(AllTokenTypes,
------------------
_ZL46gtest_AllTokenTypesLexerTest_EvalGenerateName_RKN7testing13TestParamInfoI10LexerInputEE:
function _ZL46gtest_AllTokenTypesLexerTest_EvalGenerateName_RKN7testing13TestParamInfoI10LexerInputEE called 34 returned 100% blocks executed 1%
      34*:   15:INSTANTIATE_TEST_SUITE_P(AllTokenTypes,
       34:   15-block  0
call    0 returned 34
branch  1 taken 0 (fallthrough)
branch  2 taken 34
    %%%%%:   15-block  1
call    3 never executed
    %%%%%:   15-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   15-block  3
    %%%%%:   15-block  4
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   15-block  5
    %%%%%:   15-block  6
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   15-block  7
    %%%%%:   15-block  8
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   15-block  9
    %%%%%:   15-block 10
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   15-block 11
    %%%%%:   15-block 12
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   15-block 13
    %%%%%:   15-block 14
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:   15-block 15
    %%%%%:   15-block 16
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:   15-block 17
    %%%%%:   15-block 18
call   28 never executed
branch 29 never executed (fallthrough)
branch 30 never executed (throw)
    %%%%%:   15-block 19
call   31 never executed
    %%%%%:   15-block 20
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:   15-block 21
    %%%%%:   15-block 22
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:   15-block 23
call   38 never executed
    %%%%%:   15-block 24
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    %%%%%:   15-block 25
    %%%%%:   15-block 26
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    %%%%%:   15-block 27
call   45 never executed
    %%%%%:   15-block 28
call   46 never executed
branch 47 never executed (fallthrough)
branch 48 never executed (throw)
    %%%%%:   15-block 29
    %%%%%:   15-block 30
call   49 never executed
branch 50 never executed (fallthrough)
branch 51 never executed (throw)
    %%%%%:   15-block 31
call   52 never executed
    %%%%%:   15-block 32
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    %%%%%:   15-block 33
    %%%%%:   15-block 34
call   56 never executed
branch 57 never executed (fallthrough)
branch 58 never executed (throw)
    %%%%%:   15-block 35
call   59 never executed
    %%%%%:   15-block 36
call   60 never executed
branch 61 never executed (fallthrough)
branch 62 never executed (throw)
    %%%%%:   15-block 37
    %%%%%:   15-block 38
call   63 never executed
branch 64 never executed (fallthrough)
branch 65 never executed (throw)
    %%%%%:   15-block 39
call   66 never executed
    %%%%%:   15-block 40
call   67 never executed
branch 68 never executed (fallthrough)
branch 69 never executed (throw)
    %%%%%:   15-block 41
    %%%%%:   15-block 42
call   70 never executed
branch 71 never executed (fallthrough)
branch 72 never executed (throw)
    %%%%%:   15-block 43
call   73 never executed
    %%%%%:   15-block 44
call   74 never executed
branch 75 never executed (fallthrough)
branch 76 never executed (throw)
    %%%%%:   15-block 45
    %%%%%:   15-block 46
call   77 never executed
branch 78 never executed (fallthrough)
branch 79 never executed (throw)
    %%%%%:   15-block 47
call   80 never executed
    %%%%%:   15-block 48
call   81 never executed
branch 82 never executed (fallthrough)
branch 83 never executed (throw)
    %%%%%:   15-block 49
    %%%%%:   15-block 50
call   84 never executed
branch 85 never executed (fallthrough)
branch 86 never executed (throw)
    %%%%%:   15-block 51
call   87 never executed
    %%%%%:   15-block 52
call   88 never executed
branch 89 never executed (fallthrough)
branch 90 never executed (throw)
    %%%%%:   15-block 53
    %%%%%:   15-block 54
call   91 never executed
branch 92 never executed (fallthrough)
branch 93 never executed (throw)
    %%%%%:   15-block 55
call   94 never executed
    %%%%%:   15-block 56
call   95 never executed
branch 96 never executed (fallthrough)
branch 97 never executed (throw)
    %%%%%:   15-block 57
    %%%%%:   15-block 58
call   98 never executed
branch 99 never executed (fallthrough)
branch 100 never executed (throw)
    %%%%%:   15-block 59
call   101 never executed
    %%%%%:   15-block 60
call   102 never executed
branch 103 never executed (fallthrough)
branch 104 never executed (throw)
    %%%%%:   15-block 61
    %%%%%:   15-block 62
call   105 never executed
branch 106 never executed (fallthrough)
branch 107 never executed (throw)
    %%%%%:   15-block 63
call   108 never executed
    %%%%%:   15-block 64
call   109 never executed
branch 110 never executed (fallthrough)
branch 111 never executed (throw)
    %%%%%:   15-block 65
    %%%%%:   15-block 66
call   112 never executed
branch 113 never executed (fallthrough)
branch 114 never executed (throw)
    %%%%%:   15-block 67
    %%%%%:   15-block 68
call   115 never executed
branch 116 never executed (fallthrough)
branch 117 never executed (throw)
    %%%%%:   15-block 69
    %%%%%:   15-block 70
call   118 never executed
branch 119 never executed (fallthrough)
branch 120 never executed (throw)
    %%%%%:   15-block 71
    %%%%%:   15-block 72
call   121 never executed
branch 122 never executed (fallthrough)
branch 123 never executed (throw)
    %%%%%:   15-block 73
    %%%%%:   15-block 74
call   124 never executed
branch 125 never executed (fallthrough)
branch 126 never executed (throw)
    %%%%%:   15-block 75
    %%%%%:   15-block 76
call   127 never executed
branch 128 never executed (fallthrough)
branch 129 never executed (throw)
    %%%%%:   15-block 77
    %%%%%:   15-block 78
call   130 never executed
branch 131 never executed (fallthrough)
branch 132 never executed (throw)
    %%%%%:   15-block 79
    %%%%%:   15-block 80
call   133 never executed
branch 134 never executed (fallthrough)
branch 135 never executed (throw)
    %%%%%:   15-block 81
    %%%%%:   15-block 82
call   136 never executed
branch 137 never executed (fallthrough)
branch 138 never executed (throw)
    %%%%%:   15-block 83
    %%%%%:   15-block 84
call   139 never executed
branch 140 never executed (fallthrough)
branch 141 never executed (throw)
    %%%%%:   15-block 85
    %%%%%:   15-block 86
call   142 never executed
branch 143 never executed (fallthrough)
branch 144 never executed (throw)
    %%%%%:   15-block 87
    %%%%%:   15-block 88
call   145 never executed
branch 146 never executed (fallthrough)
branch 147 never executed (throw)
    %%%%%:   15-block 89
    %%%%%:   15-block 90
call   148 never executed
branch 149 never executed (fallthrough)
branch 150 never executed (throw)
    %%%%%:   15-block 91
call   151 never executed
    %%%%%:   15-block 92
call   152 never executed
branch 153 never executed (fallthrough)
branch 154 never executed (throw)
    %%%%%:   15-block 93
    %%%%%:   15-block 94
call   155 never executed
branch 156 never executed (fallthrough)
branch 157 never executed (throw)
    %%%%%:   15-block 95
call   158 never executed
branch 159 never executed (fallthrough)
branch 160 never executed (throw)
    %%%%%:   15-block 96
call   161 never executed
branch 162 never executed (fallthrough)
branch 163 never executed (throw)
    %%%%%:   15-block 97
call   164 never executed
call   165 never executed
call   166 never executed
call   167 never executed
call   168 never executed
call   169 never executed
call   170 never executed
call   171 never executed
call   172 never executed
call   173 never executed
call   174 never executed
call   175 never executed
call   176 never executed
call   177 never executed
call   178 never executed
call   179 never executed
call   180 never executed
call   181 never executed
call   182 never executed
call   183 never executed
call   184 never executed
call   185 never executed
call   186 never executed
call   187 never executed
call   188 never executed
call   189 never executed
call   190 never executed
call   191 never executed
call   192 never executed
call   193 never executed
call   194 never executed
call   195 never executed
call   196 never executed
call   197 never executed
call   198 never executed
call   199 never executed
call   200 never executed
call   201 never executed
call   202 never executed
call   203 never executed
call   204 never executed
call   205 never executed
call   206 never executed
call   207 never executed
call   208 never executed
call   209 never executed
call   210 never executed
call   211 never executed
call   212 never executed
call   213 never executed
call   214 never executed
call   215 never executed
call   216 never executed
call   217 never executed
call   218 never executed
call   219 never executed
call   220 never executed
call   221 never executed
call   222 never executed
call   223 never executed
call   224 never executed
call   225 never executed
       34:   15-block 98
call   226 returned 34
    $$$$$:   15-block 99
call   227 never executed
    $$$$$:   15-block 100
call   228 never executed
    $$$$$:   15-block 101
branch 229 never executed (fallthrough)
branch 230 never executed
    $$$$$:   15-block 102
call   231 never executed
    $$$$$:   15-block 103
    $$$$$:   15-block 104
    $$$$$:   15-block 105
call   232 never executed
    $$$$$:   15-block 106
branch 233 never executed (fallthrough)
branch 234 never executed
    $$$$$:   15-block 107
call   235 never executed
    $$$$$:   15-block 108
    $$$$$:   15-block 109
    $$$$$:   15-block 110
call   236 never executed
    $$$$$:   15-block 111
call   237 never executed
    $$$$$:   15-block 112
    $$$$$:   15-block 113
    $$$$$:   15-block 114
branch 238 never executed (fallthrough)
branch 239 never executed
    $$$$$:   15-block 115
call   240 never executed
    $$$$$:   15-block 116
    $$$$$:   15-block 117
    $$$$$:   15-block 118
call   241 never executed
    $$$$$:   15-block 119
branch 242 never executed (fallthrough)
branch 243 never executed
    $$$$$:   15-block 120
call   244 never executed
    $$$$$:   15-block 121
    $$$$$:   15-block 122
    $$$$$:   15-block 123
call   245 never executed
    $$$$$:   15-block 124
branch 246 never executed (fallthrough)
branch 247 never executed
    $$$$$:   15-block 125
call   248 never executed
    $$$$$:   15-block 126
    $$$$$:   15-block 127
    $$$$$:   15-block 128
call   249 never executed
    $$$$$:   15-block 129
branch 250 never executed (fallthrough)
branch 251 never executed
    $$$$$:   15-block 130
call   252 never executed
    $$$$$:   15-block 131
    $$$$$:   15-block 132
    $$$$$:   15-block 133
call   253 never executed
    $$$$$:   15-block 134
branch 254 never executed (fallthrough)
branch 255 never executed
    $$$$$:   15-block 135
call   256 never executed
    $$$$$:   15-block 136
    $$$$$:   15-block 137
    $$$$$:   15-block 138
call   257 never executed
    $$$$$:   15-block 139
branch 258 never executed (fallthrough)
branch 259 never executed
    $$$$$:   15-block 140
call   260 never executed
    $$$$$:   15-block 141
    $$$$$:   15-block 142
    $$$$$:   15-block 143
call   261 never executed
    $$$$$:   15-block 144
branch 262 never executed (fallthrough)
branch 263 never executed
    $$$$$:   15-block 145
call   264 never executed
    $$$$$:   15-block 146
    $$$$$:   15-block 147
    $$$$$:   15-block 148
call   265 never executed
    $$$$$:   15-block 149
branch 266 never executed (fallthrough)
branch 267 never executed
    $$$$$:   15-block 150
call   268 never executed
    $$$$$:   15-block 151
    $$$$$:   15-block 152
    $$$$$:   15-block 153
call   269 never executed
    $$$$$:   15-block 154
branch 270 never executed (fallthrough)
branch 271 never executed
    $$$$$:   15-block 155
call   272 never executed
    $$$$$:   15-block 156
    $$$$$:   15-block 157
    $$$$$:   15-block 158
call   273 never executed
    $$$$$:   15-block 159
branch 274 never executed (fallthrough)
branch 275 never executed
    $$$$$:   15-block 160
call   276 never executed
    $$$$$:   15-block 161
    $$$$$:   15-block 162
    $$$$$:   15-block 163
call   277 never executed
    $$$$$:   15-block 164
branch 278 never executed (fallthrough)
branch 279 never executed
    $$$$$:   15-block 165
call   280 never executed
    $$$$$:   15-block 166
    $$$$$:   15-block 167
    $$$$$:   15-block 168
call   281 never executed
    $$$$$:   15-block 169
branch 282 never executed (fallthrough)
branch 283 never executed
    $$$$$:   15-block 170
call   284 never executed
    $$$$$:   15-block 171
    $$$$$:   15-block 172
    $$$$$:   15-block 173
call   285 never executed
    $$$$$:   15-block 174
branch 286 never executed (fallthrough)
branch 287 never executed
    $$$$$:   15-block 175
call   288 never executed
    $$$$$:   15-block 176
    $$$$$:   15-block 177
    $$$$$:   15-block 178
call   289 never executed
    $$$$$:   15-block 179
call   290 never executed
    $$$$$:   15-block 180
    $$$$$:   15-block 181
    $$$$$:   15-block 182
branch 291 never executed (fallthrough)
branch 292 never executed
    $$$$$:   15-block 183
call   293 never executed
    $$$$$:   15-block 184
    $$$$$:   15-block 185
    $$$$$:   15-block 186
call   294 never executed
    $$$$$:   15-block 187
call   295 never executed
    $$$$$:   15-block 188
    $$$$$:   15-block 189
    $$$$$:   15-block 190
branch 296 never executed (fallthrough)
branch 297 never executed
    $$$$$:   15-block 191
call   298 never executed
    $$$$$:   15-block 192
    $$$$$:   15-block 193
    $$$$$:   15-block 194
call   299 never executed
    $$$$$:   15-block 195
call   300 never executed
    $$$$$:   15-block 196
    $$$$$:   15-block 197
    $$$$$:   15-block 198
branch 301 never executed (fallthrough)
branch 302 never executed
    $$$$$:   15-block 199
call   303 never executed
    $$$$$:   15-block 200
    $$$$$:   15-block 201
    $$$$$:   15-block 202
call   304 never executed
    $$$$$:   15-block 203
call   305 never executed
    $$$$$:   15-block 204
    $$$$$:   15-block 205
    $$$$$:   15-block 206
branch 306 never executed (fallthrough)
branch 307 never executed
    $$$$$:   15-block 207
call   308 never executed
    $$$$$:   15-block 208
    $$$$$:   15-block 209
    $$$$$:   15-block 210
call   309 never executed
    $$$$$:   15-block 211
call   310 never executed
    $$$$$:   15-block 212
    $$$$$:   15-block 213
    $$$$$:   15-block 214
branch 311 never executed (fallthrough)
branch 312 never executed
    $$$$$:   15-block 215
call   313 never executed
    $$$$$:   15-block 216
    $$$$$:   15-block 217
    $$$$$:   15-block 218
call   314 never executed
    $$$$$:   15-block 219
call   315 never executed
    $$$$$:   15-block 220
    $$$$$:   15-block 221
    $$$$$:   15-block 222
branch 316 never executed (fallthrough)
branch 317 never executed
    $$$$$:   15-block 223
call   318 never executed
    $$$$$:   15-block 224
    $$$$$:   15-block 225
    $$$$$:   15-block 226
call   319 never executed
    $$$$$:   15-block 227
call   320 never executed
    $$$$$:   15-block 228
    $$$$$:   15-block 229
    $$$$$:   15-block 230
branch 321 never executed (fallthrough)
branch 322 never executed
    $$$$$:   15-block 231
call   323 never executed
    $$$$$:   15-block 232
    $$$$$:   15-block 233
    $$$$$:   15-block 234
call   324 never executed
    $$$$$:   15-block 235
call   325 never executed
    $$$$$:   15-block 236
    $$$$$:   15-block 237
    $$$$$:   15-block 238
branch 326 never executed (fallthrough)
branch 327 never executed
    $$$$$:   15-block 239
call   328 never executed
    $$$$$:   15-block 240
    $$$$$:   15-block 241
    $$$$$:   15-block 242
call   329 never executed
    $$$$$:   15-block 243
call   330 never executed
    $$$$$:   15-block 244
    $$$$$:   15-block 245
    $$$$$:   15-block 246
branch 331 never executed (fallthrough)
branch 332 never executed
    $$$$$:   15-block 247
call   333 never executed
    $$$$$:   15-block 248
    $$$$$:   15-block 249
    $$$$$:   15-block 250
call   334 never executed
    $$$$$:   15-block 251
call   335 never executed
    $$$$$:   15-block 252
    $$$$$:   15-block 253
    $$$$$:   15-block 254
branch 336 never executed (fallthrough)
branch 337 never executed
    $$$$$:   15-block 255
call   338 never executed
    $$$$$:   15-block 256
    $$$$$:   15-block 257
    $$$$$:   15-block 258
call   339 never executed
    $$$$$:   15-block 259
call   340 never executed
    $$$$$:   15-block 260
    $$$$$:   15-block 261
    $$$$$:   15-block 262
branch 341 never executed (fallthrough)
branch 342 never executed
    $$$$$:   15-block 263
call   343 never executed
    $$$$$:   15-block 264
    $$$$$:   15-block 265
    $$$$$:   15-block 266
call   344 never executed
    $$$$$:   15-block 267
call   345 never executed
    $$$$$:   15-block 268
    $$$$$:   15-block 269
    $$$$$:   15-block 270
branch 346 never executed (fallthrough)
branch 347 never executed
    $$$$$:   15-block 271
call   348 never executed
    $$$$$:   15-block 272
    $$$$$:   15-block 273
    $$$$$:   15-block 274
call   349 never executed
    $$$$$:   15-block 275
branch 350 never executed (fallthrough)
branch 351 never executed
    $$$$$:   15-block 276
call   352 never executed
    $$$$$:   15-block 277
    $$$$$:   15-block 278
    $$$$$:   15-block 279
call   353 never executed
    $$$$$:   15-block 280
branch 354 never executed (fallthrough)
branch 355 never executed
    $$$$$:   15-block 281
call   356 never executed
    $$$$$:   15-block 282
    $$$$$:   15-block 283
    $$$$$:   15-block 284
call   357 never executed
    $$$$$:   15-block 285
branch 358 never executed (fallthrough)
branch 359 never executed
    $$$$$:   15-block 286
call   360 never executed
    $$$$$:   15-block 287
    $$$$$:   15-block 288
    $$$$$:   15-block 289
call   361 never executed
    $$$$$:   15-block 290
branch 362 never executed (fallthrough)
branch 363 never executed
    $$$$$:   15-block 291
call   364 never executed
    $$$$$:   15-block 292
    $$$$$:   15-block 293
    $$$$$:   15-block 294
call   365 never executed
    $$$$$:   15-block 295
branch 366 never executed (fallthrough)
branch 367 never executed
    $$$$$:   15-block 296
call   368 never executed
    $$$$$:   15-block 297
    $$$$$:   15-block 298
    $$$$$:   15-block 299
call   369 never executed
    $$$$$:   15-block 300
branch 370 never executed (fallthrough)
branch 371 never executed
    $$$$$:   15-block 301
call   372 never executed
    $$$$$:   15-block 302
    $$$$$:   15-block 303
    $$$$$:   15-block 304
call   373 never executed
    $$$$$:   15-block 305
branch 374 never executed (fallthrough)
branch 375 never executed
    $$$$$:   15-block 306
call   376 never executed
    $$$$$:   15-block 307
    $$$$$:   15-block 308
    $$$$$:   15-block 309
------------------
_ZL43gtest_AllTokenTypesLexerTest_EvalGenerator_v:
function _ZL43gtest_AllTokenTypesLexerTest_EvalGenerator_v called 1 returned 100% blocks executed 40%
       82:   15:INSTANTIATE_TEST_SUITE_P(AllTokenTypes,
        1:   15-block  0
        1:   15-block  1
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15-block  2
        1:   15-block  3
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   15-block  4
        1:   15-block  5
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   15-block  6
        1:   15-block  7
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   15-block  8
        1:   15-block  9
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   15-block 10
        1:   15-block 11
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   15-block 12
        1:   15-block 13
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   15-block 14
        1:   15-block 15
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0 (throw)
        1:   15-block 16
        1:   15-block 17
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:   15-block 18
call   27 returned 1
        1:   15-block 19
call   28 returned 1
branch 29 taken 1 (fallthrough)
branch 30 taken 0 (throw)
        1:   15-block 20
        1:   15-block 21
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
        1:   15-block 22
call   34 returned 1
        1:   15-block 23
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
        1:   15-block 24
        1:   15-block 25
call   38 returned 1
branch 39 taken 1 (fallthrough)
branch 40 taken 0 (throw)
        1:   15-block 26
call   41 returned 1
        1:   15-block 27
call   42 returned 1
branch 43 taken 1 (fallthrough)
branch 44 taken 0 (throw)
        1:   15-block 28
        1:   15-block 29
call   45 returned 1
branch 46 taken 1 (fallthrough)
branch 47 taken 0 (throw)
        1:   15-block 30
call   48 returned 1
        1:   15-block 31
call   49 returned 1
branch 50 taken 1 (fallthrough)
branch 51 taken 0 (throw)
        1:   15-block 32
        1:   15-block 33
call   52 returned 1
branch 53 taken 1 (fallthrough)
branch 54 taken 0 (throw)
        1:   15-block 34
call   55 returned 1
        1:   15-block 35
call   56 returned 1
branch 57 taken 1 (fallthrough)
branch 58 taken 0 (throw)
        1:   15-block 36
        1:   15-block 37
call   59 returned 1
branch 60 taken 1 (fallthrough)
branch 61 taken 0 (throw)
        1:   15-block 38
call   62 returned 1
        1:   15-block 39
call   63 returned 1
branch 64 taken 1 (fallthrough)
branch 65 taken 0 (throw)
        1:   15-block 40
        1:   15-block 41
call   66 returned 1
branch 67 taken 1 (fallthrough)
branch 68 taken 0 (throw)
        1:   15-block 42
call   69 returned 1
        1:   15-block 43
call   70 returned 1
branch 71 taken 1 (fallthrough)
branch 72 taken 0 (throw)
        1:   15-block 44
        1:   15-block 45
call   73 returned 1
branch 74 taken 1 (fallthrough)
branch 75 taken 0 (throw)
        1:   15-block 46
call   76 returned 1
        1:   15-block 47
call   77 returned 1
branch 78 taken 1 (fallthrough)
branch 79 taken 0 (throw)
        1:   15-block 48
        1:   15-block 49
call   80 returned 1
branch 81 taken 1 (fallthrough)
branch 82 taken 0 (throw)
        1:   15-block 50
call   83 returned 1
        1:   15-block 51
call   84 returned 1
branch 85 taken 1 (fallthrough)
branch 86 taken 0 (throw)
        1:   15-block 52
        1:   15-block 53
call   87 returned 1
branch 88 taken 1 (fallthrough)
branch 89 taken 0 (throw)
        1:   15-block 54
call   90 returned 1
        1:   15-block 55
call   91 returned 1
branch 92 taken 1 (fallthrough)
branch 93 taken 0 (throw)
        1:   15-block 56
        1:   15-block 57
call   94 returned 1
branch 95 taken 1 (fallthrough)
branch 96 taken 0 (throw)
        1:   15-block 58
call   97 returned 1
        1:   15-block 59
call   98 returned 1
branch 99 taken 1 (fallthrough)
branch 100 taken 0 (throw)
        1:   15-block 60
        1:   15-block 61
call   101 returned 1
branch 102 taken 1 (fallthrough)
branch 103 taken 0 (throw)
        1:   15-block 62
call   104 returned 1
        1:   15-block 63
call   105 returned 1
branch 106 taken 1 (fallthrough)
branch 107 taken 0 (throw)
        1:   15-block 64
        1:   15-block 65
call   108 returned 1
branch 109 taken 1 (fallthrough)
branch 110 taken 0 (throw)
        1:   15-block 66
        1:   15-block 67
call   111 returned 1
branch 112 taken 1 (fallthrough)
branch 113 taken 0 (throw)
        1:   15-block 68
        1:   15-block 69
call   114 returned 1
branch 115 taken 1 (fallthrough)
branch 116 taken 0 (throw)
        1:   15-block 70
        1:   15-block 71
call   117 returned 1
branch 118 taken 1 (fallthrough)
branch 119 taken 0 (throw)
        1:   15-block 72
        1:   15-block 73
call   120 returned 1
branch 121 taken 1 (fallthrough)
branch 122 taken 0 (throw)
        1:   15-block 74
        1:   15-block 75
call   123 returned 1
branch 124 taken 1 (fallthrough)
branch 125 taken 0 (throw)
        1:   15-block 76
        1:   15-block 77
call   126 returned 1
branch 127 taken 1 (fallthrough)
branch 128 taken 0 (throw)
        1:   15-block 78
        1:   15-block 79
call   129 returned 1
branch 130 taken 1 (fallthrough)
branch 131 taken 0 (throw)
        1:   15-block 80
        1:   15-block 81
call   132 returned 1
branch 133 taken 1 (fallthrough)
branch 134 taken 0 (throw)
        1:   15-block 82
        1:   15-block 83
call   135 returned 1
branch 136 taken 1 (fallthrough)
branch 137 taken 0 (throw)
        1:   15-block 84
        1:   15-block 85
call   138 returned 1
branch 139 taken 1 (fallthrough)
branch 140 taken 0 (throw)
        1:   15-block 86
        1:   15-block 87
call   141 returned 1
branch 142 taken 1 (fallthrough)
branch 143 taken 0 (throw)
        1:   15-block 88
        1:   15-block 89
call   144 returned 1
branch 145 taken 1 (fallthrough)
branch 146 taken 0 (throw)
        1:   15-block 90
call   147 returned 1
        1:   15-block 91
call   148 returned 1
branch 149 taken 1 (fallthrough)
branch 150 taken 0 (throw)
        1:   15-block 92
        1:   15-block 93
call   151 returned 1
branch 152 taken 1 (fallthrough)
branch 153 taken 0 (throw)
        1:   15-block 94
call   154 returned 1
branch 155 taken 1 (fallthrough)
branch 156 taken 0 (throw)
        1:   15-block 95
call   157 returned 1
branch 158 taken 1 (fallthrough)
branch 159 taken 0 (throw)
        1:   15-block 96
        1:   15-block 97
call   160 returned 1
call   161 returned 1
call   162 returned 1
call   163 returned 1
call   164 returned 1
call   165 returned 1
call   166 returned 1
call   167 returned 1
call   168 returned 1
call   169 returned 1
call   170 returned 1
call   171 returned 1
call   172 returned 1
call   173 returned 1
call   174 returned 1
call   175 returned 1
call   176 returned 1
call   177 returned 1
call   178 returned 1
call   179 returned 1
call   180 returned 1
call   181 returned 1
call   182 returned 1
call   183 returned 1
call   184 returned 1
call   185 returned 1
call   186 returned 1
call   187 returned 1
call   188 returned 1
call   189 returned 1
call   190 returned 1
call   191 returned 1
call   192 returned 1
call   193 returned 1
call   194 returned 1
call   195 returned 1
call   196 returned 1
call   197 returned 1
call   198 returned 1
call   199 returned 1
call   200 returned 1
call   201 returned 1
call   202 returned 1
call   203 returned 1
call   204 returned 1
call   205 returned 1
call   206 returned 1
call   207 returned 1
call   208 returned 1
call   209 returned 1
call   210 returned 1
call   211 returned 1
call   212 returned 1
call   213 returned 1
call   214 returned 1
call   215 returned 1
call   216 returned 1
call   217 returned 1
call   218 returned 1
call   219 returned 1
call   220 returned 1
        1:   15-block 98
    $$$$$:   15-block 99
call   221 never executed
    $$$$$:   15-block 100
call   222 never executed
    $$$$$:   15-block 101
branch 223 never executed (fallthrough)
branch 224 never executed
    $$$$$:   15-block 102
call   225 never executed
    $$$$$:   15-block 103
    $$$$$:   15-block 104
    $$$$$:   15-block 105
call   226 never executed
    $$$$$:   15-block 106
branch 227 never executed (fallthrough)
branch 228 never executed
    $$$$$:   15-block 107
call   229 never executed
    $$$$$:   15-block 108
    $$$$$:   15-block 109
    $$$$$:   15-block 110
call   230 never executed
    $$$$$:   15-block 111
call   231 never executed
    $$$$$:   15-block 112
    $$$$$:   15-block 113
    $$$$$:   15-block 114
branch 232 never executed (fallthrough)
branch 233 never executed
    $$$$$:   15-block 115
call   234 never executed
    $$$$$:   15-block 116
    $$$$$:   15-block 117
    $$$$$:   15-block 118
call   235 never executed
    $$$$$:   15-block 119
branch 236 never executed (fallthrough)
branch 237 never executed
    $$$$$:   15-block 120
call   238 never executed
    $$$$$:   15-block 121
    $$$$$:   15-block 122
    $$$$$:   15-block 123
call   239 never executed
    $$$$$:   15-block 124
branch 240 never executed (fallthrough)
branch 241 never executed
    $$$$$:   15-block 125
call   242 never executed
    $$$$$:   15-block 126
    $$$$$:   15-block 127
    $$$$$:   15-block 128
call   243 never executed
    $$$$$:   15-block 129
branch 244 never executed (fallthrough)
branch 245 never executed
    $$$$$:   15-block 130
call   246 never executed
    $$$$$:   15-block 131
    $$$$$:   15-block 132
    $$$$$:   15-block 133
call   247 never executed
    $$$$$:   15-block 134
branch 248 never executed (fallthrough)
branch 249 never executed
    $$$$$:   15-block 135
call   250 never executed
    $$$$$:   15-block 136
    $$$$$:   15-block 137
    $$$$$:   15-block 138
call   251 never executed
    $$$$$:   15-block 139
branch 252 never executed (fallthrough)
branch 253 never executed
    $$$$$:   15-block 140
call   254 never executed
    $$$$$:   15-block 141
    $$$$$:   15-block 142
    $$$$$:   15-block 143
call   255 never executed
    $$$$$:   15-block 144
branch 256 never executed (fallthrough)
branch 257 never executed
    $$$$$:   15-block 145
call   258 never executed
    $$$$$:   15-block 146
    $$$$$:   15-block 147
    $$$$$:   15-block 148
call   259 never executed
    $$$$$:   15-block 149
branch 260 never executed (fallthrough)
branch 261 never executed
    $$$$$:   15-block 150
call   262 never executed
    $$$$$:   15-block 151
    $$$$$:   15-block 152
    $$$$$:   15-block 153
call   263 never executed
    $$$$$:   15-block 154
branch 264 never executed (fallthrough)
branch 265 never executed
    $$$$$:   15-block 155
call   266 never executed
    $$$$$:   15-block 156
    $$$$$:   15-block 157
    $$$$$:   15-block 158
call   267 never executed
    $$$$$:   15-block 159
branch 268 never executed (fallthrough)
branch 269 never executed
    $$$$$:   15-block 160
call   270 never executed
    $$$$$:   15-block 161
    $$$$$:   15-block 162
    $$$$$:   15-block 163
call   271 never executed
    $$$$$:   15-block 164
branch 272 never executed (fallthrough)
branch 273 never executed
    $$$$$:   15-block 165
call   274 never executed
    $$$$$:   15-block 166
    $$$$$:   15-block 167
    $$$$$:   15-block 168
call   275 never executed
    $$$$$:   15-block 169
branch 276 never executed (fallthrough)
branch 277 never executed
    $$$$$:   15-block 170
call   278 never executed
    $$$$$:   15-block 171
    $$$$$:   15-block 172
    $$$$$:   15-block 173
call   279 never executed
    $$$$$:   15-block 174
branch 280 never executed (fallthrough)
branch 281 never executed
    $$$$$:   15-block 175
call   282 never executed
    $$$$$:   15-block 176
    $$$$$:   15-block 177
    $$$$$:   15-block 178
call   283 never executed
    $$$$$:   15-block 179
call   284 never executed
    $$$$$:   15-block 180
    $$$$$:   15-block 181
    $$$$$:   15-block 182
branch 285 never executed (fallthrough)
branch 286 never executed
    $$$$$:   15-block 183
call   287 never executed
    $$$$$:   15-block 184
    $$$$$:   15-block 185
    $$$$$:   15-block 186
call   288 never executed
    $$$$$:   15-block 187
call   289 never executed
    $$$$$:   15-block 188
    $$$$$:   15-block 189
    $$$$$:   15-block 190
branch 290 never executed (fallthrough)
branch 291 never executed
    $$$$$:   15-block 191
call   292 never executed
    $$$$$:   15-block 192
    $$$$$:   15-block 193
    $$$$$:   15-block 194
call   293 never executed
    $$$$$:   15-block 195
call   294 never executed
    $$$$$:   15-block 196
    $$$$$:   15-block 197
    $$$$$:   15-block 198
branch 295 never executed (fallthrough)
branch 296 never executed
    $$$$$:   15-block 199
call   297 never executed
    $$$$$:   15-block 200
    $$$$$:   15-block 201
    $$$$$:   15-block 202
call   298 never executed
    $$$$$:   15-block 203
call   299 never executed
    $$$$$:   15-block 204
    $$$$$:   15-block 205
    $$$$$:   15-block 206
branch 300 never executed (fallthrough)
branch 301 never executed
    $$$$$:   15-block 207
call   302 never executed
    $$$$$:   15-block 208
    $$$$$:   15-block 209
    $$$$$:   15-block 210
call   303 never executed
    $$$$$:   15-block 211
call   304 never executed
    $$$$$:   15-block 212
    $$$$$:   15-block 213
    $$$$$:   15-block 214
branch 305 never executed (fallthrough)
branch 306 never executed
    $$$$$:   15-block 215
call   307 never executed
    $$$$$:   15-block 216
    $$$$$:   15-block 217
    $$$$$:   15-block 218
call   308 never executed
    $$$$$:   15-block 219
call   309 never executed
    $$$$$:   15-block 220
    $$$$$:   15-block 221
    $$$$$:   15-block 222
branch 310 never executed (fallthrough)
branch 311 never executed
    $$$$$:   15-block 223
call   312 never executed
    $$$$$:   15-block 224
    $$$$$:   15-block 225
    $$$$$:   15-block 226
call   313 never executed
    $$$$$:   15-block 227
call   314 never executed
    $$$$$:   15-block 228
    $$$$$:   15-block 229
    $$$$$:   15-block 230
branch 315 never executed (fallthrough)
branch 316 never executed
    $$$$$:   15-block 231
call   317 never executed
    $$$$$:   15-block 232
    $$$$$:   15-block 233
    $$$$$:   15-block 234
call   318 never executed
    $$$$$:   15-block 235
call   319 never executed
    $$$$$:   15-block 236
    $$$$$:   15-block 237
    $$$$$:   15-block 238
branch 320 never executed (fallthrough)
branch 321 never executed
    $$$$$:   15-block 239
call   322 never executed
    $$$$$:   15-block 240
    $$$$$:   15-block 241
    $$$$$:   15-block 242
call   323 never executed
    $$$$$:   15-block 243
call   324 never executed
    $$$$$:   15-block 244
    $$$$$:   15-block 245
    $$$$$:   15-block 246
branch 325 never executed (fallthrough)
branch 326 never executed
    $$$$$:   15-block 247
call   327 never executed
    $$$$$:   15-block 248
    $$$$$:   15-block 249
    $$$$$:   15-block 250
call   328 never executed
    $$$$$:   15-block 251
call   329 never executed
    $$$$$:   15-block 252
    $$$$$:   15-block 253
    $$$$$:   15-block 254
branch 330 never executed (fallthrough)
branch 331 never executed
    $$$$$:   15-block 255
call   332 never executed
    $$$$$:   15-block 256
    $$$$$:   15-block 257
    $$$$$:   15-block 258
call   333 never executed
    $$$$$:   15-block 259
call   334 never executed
    $$$$$:   15-block 260
    $$$$$:   15-block 261
    $$$$$:   15-block 262
branch 335 never executed (fallthrough)
branch 336 never executed
    $$$$$:   15-block 263
call   337 never executed
    $$$$$:   15-block 264
    $$$$$:   15-block 265
    $$$$$:   15-block 266
call   338 never executed
    $$$$$:   15-block 267
call   339 never executed
    $$$$$:   15-block 268
    $$$$$:   15-block 269
    $$$$$:   15-block 270
branch 340 never executed (fallthrough)
branch 341 never executed
    $$$$$:   15-block 271
call   342 never executed
    $$$$$:   15-block 272
    $$$$$:   15-block 273
    $$$$$:   15-block 274
call   343 never executed
    $$$$$:   15-block 275
branch 344 never executed (fallthrough)
branch 345 never executed
    $$$$$:   15-block 276
call   346 never executed
    $$$$$:   15-block 277
    $$$$$:   15-block 278
    $$$$$:   15-block 279
call   347 never executed
    $$$$$:   15-block 280
branch 348 never executed (fallthrough)
branch 349 never executed
    $$$$$:   15-block 281
call   350 never executed
    $$$$$:   15-block 282
    $$$$$:   15-block 283
    $$$$$:   15-block 284
call   351 never executed
    $$$$$:   15-block 285
branch 352 never executed (fallthrough)
branch 353 never executed
    $$$$$:   15-block 286
call   354 never executed
    $$$$$:   15-block 287
    $$$$$:   15-block 288
    $$$$$:   15-block 289
call   355 never executed
    $$$$$:   15-block 290
branch 356 never executed (fallthrough)
branch 357 never executed
    $$$$$:   15-block 291
call   358 never executed
    $$$$$:   15-block 292
    $$$$$:   15-block 293
    $$$$$:   15-block 294
call   359 never executed
    $$$$$:   15-block 295
branch 360 never executed (fallthrough)
branch 361 never executed
    $$$$$:   15-block 296
call   362 never executed
    $$$$$:   15-block 297
    $$$$$:   15-block 298
    $$$$$:   15-block 299
call   363 never executed
    $$$$$:   15-block 300
branch 364 never executed (fallthrough)
branch 365 never executed
    $$$$$:   15-block 301
call   366 never executed
    $$$$$:   15-block 302
    $$$$$:   15-block 303
    $$$$$:   15-block 304
call   367 never executed
    $$$$$:   15-block 305
branch 368 never executed (fallthrough)
branch 369 never executed
    $$$$$:   15-block 306
call   370 never executed
    $$$$$:   15-block 307
    $$$$$:   15-block 308
------------------
        -:   16:    LexerTest,
        -:   17:    ::testing::Values(
        -:   18:        // Primitives
        -:   19:        LexerInput{"42", TokenType::INT, 42},
        -:   20:        LexerInput{"3.14", TokenType::FLOAT, 3.14f},
        -:   21:        LexerInput{"\"hello\"", TokenType::STRING, std::string("hello")},
        -:   22:        // Operators
        -:   23:        LexerInput{"+", TokenType::PLUS, {}},
        -:   24:        LexerInput{"-", TokenType::MINUS, {}},
        -:   25:        LexerInput{"*", TokenType::MUL, {}},
        -:   26:        LexerInput{"/", TokenType::DIV, {}},
        -:   27:        LexerInput{"%", TokenType::MOD, {}},
        -:   28:        LexerInput{"++", TokenType::INCREMENT, {}},
        -:   29:        LexerInput{"--", TokenType::DECREMENT, {}},
        -:   30:        // Symbols
        -:   31:        LexerInput{"(", TokenType::OPENPAREN, {}},
        -:   32:        LexerInput{")", TokenType::CLOSEPAREN, {}},
        -:   33:        LexerInput{"{", TokenType::OPENBRACE, {}},
        -:   34:        LexerInput{"}", TokenType::CLOSEBRACE, {}},
        -:   35:        LexerInput{",", TokenType::SEPERATOR, {}},
        -:   36:        // Keywords and identifiers
        -:   37:        LexerInput{"var", TokenType::KEYWORD, std::string("var")},
        -:   38:        LexerInput{"if", TokenType::KEYWORD, std::string("if")},
        -:   39:        LexerInput{"else", TokenType::KEYWORD, std::string("else")},
        -:   40:        LexerInput{"while", TokenType::KEYWORD, std::string("while")},
        -:   41:        LexerInput{"for", TokenType::KEYWORD, std::string("for")},
        -:   42:        LexerInput{"func", TokenType::KEYWORD, std::string("func")},
        -:   43:        LexerInput{"return", TokenType::KEYWORD, std::string("return")},
        -:   44:        LexerInput{"not", TokenType::KEYWORD, std::string("not")},
        -:   45:        LexerInput{"and", TokenType::KEYWORD, std::string("and")},
        -:   46:        LexerInput{"or", TokenType::KEYWORD, std::string("or")},
        -:   47:        LexerInput{"out", TokenType::KEYWORD, std::string("out")},
        -:   48:        LexerInput{"x", TokenType::IDENTIFIER, std::string("x")},
        -:   49:        // Comparators and assignment
        -:   50:        LexerInput{"=", TokenType::EQUALS, {}},
        -:   51:        LexerInput{"==", TokenType::TRUEEQUALS, {}},
        -:   52:        LexerInput{"!=", TokenType::NOTEQUAL, {}},
        -:   53:        LexerInput{"<", TokenType::LESSTHAN, {}},
        -:   54:        LexerInput{">", TokenType::GREATERTHAN, {}},
        -:   55:        LexerInput{"<=", TokenType::LESSEQUAL, {}},
        -:   56:        LexerInput{">=", TokenType::GREATEREQUAL, {}}
        -:   57:    )
        -:   58:);
        -:   59:
       73:   60:TEST_P(LexerTest, ProducesExpectedTokenType) {
       34:   61:    const LexerInput& param = GetParam();
        -:   62:
       34:   63:    std::istringstream stream(param.input);
       34:   64:    PositionHandler ph("mock.vis", stream);
       34:   65:    Lexer lexer(ph);
        -:   66:
       34:   67:    auto tokens = lexer.tokenise();
       34:   68:    const auto& line = tokens.begin()->second;
        -:   69:
      34*:   70:    ASSERT_FALSE(line.empty());
        -:   71:
       34:   72:    const Token& token = line[0];
      34*:   73:    EXPECT_EQ(token.getType(), param.expectedType) << "Input: " << param.input;
        -:   74:
       34:   75:    const auto& actualValue = token.getValue();
       34:   76:    const auto& expectedValue = param.expectedValue;
        -:   77:
       34:   78:    if (!std::holds_alternative<std::monostate>(expectedValue)) {
      15*:   79:        ASSERT_EQ(actualValue.index(), expectedValue.index()) << "Mismatched ValueLiteral type for input: " << param.input;
        -:   80:
       15:   81:        if (std::holds_alternative<int>(expectedValue)) {
       1*:   82:            EXPECT_EQ(std::get<int>(actualValue), std::get<int>(expectedValue));
       14:   83:        } else if (std::holds_alternative<float>(expectedValue)) {
       1*:   84:            EXPECT_FLOAT_EQ(std::get<float>(actualValue), std::get<float>(expectedValue));
       13:   85:        } else if (std::holds_alternative<std::string>(expectedValue)) {
      13*:   86:            EXPECT_EQ(std::get<std::string>(actualValue), std::get<std::string>(expectedValue));
    #####:   87:        } else if (std::holds_alternative<bool>(expectedValue)) {
    #####:   88:            EXPECT_EQ(std::get<bool>(actualValue), std::get<bool>(expectedValue));
        -:   89:        }
        -:   90:    }
       34:   91:}
------------------
_ZN40LexerTest_ProducesExpectedTokenType_Test8TestBodyEv:
function _ZN40LexerTest_ProducesExpectedTokenType_Test8TestBodyEv called 34 returned 100% blocks executed 35%
       34:   60:TEST_P(LexerTest, ProducesExpectedTokenType) {
       34:   61:    const LexerInput& param = GetParam();
       34:   61-block  0
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
        -:   62:
       34:   63:    std::istringstream stream(param.input);
       34:   63-block  0
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
       34:   64:    PositionHandler ph("mock.vis", stream);
       34:   64-block  0
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
       34:   64-block  1
call    3 returned 34
branch  4 taken 34 (fallthrough)
branch  5 taken 0 (throw)
       34:   64-block  2
call    6 returned 34
    $$$$$:   64-block  3
call    7 never executed
    $$$$$:   64-block  4
    $$$$$:   64-block  5
       34:   65:    Lexer lexer(ph);
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
        -:   66:
       34:   67:    auto tokens = lexer.tokenise();
       34:   67-block  0
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
       34:   68:    const auto& line = tokens.begin()->second;
       34:   68-block  0
call    0 returned 34
call    1 returned 34
        -:   69:
      34*:   70:    ASSERT_FALSE(line.empty());
call    0 returned 34
call    1 returned 34
call    2 returned 34
branch  3 taken 0 (fallthrough)
branch  4 taken 34
    %%%%%:   70-block  0
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   70-block  1
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   70-block  2
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   70-block  3
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   70-block  4
call   18 never executed
call   19 never executed
call   20 never executed
       34:   70-block  5
       34:   70-block  6
call   21 returned 34
branch 22 taken 34 (fallthrough)
branch 23 taken 0
       34:   70-block  7
    $$$$$:   70-block  8
call   24 never executed
    $$$$$:   70-block  9
call   25 never executed
    $$$$$:   70-block 10
    $$$$$:   70-block 11
    $$$$$:   70-block 12
call   26 never executed
    $$$$$:   70-block 13
    $$$$$:   70-block 14
call   27 never executed
        -:   71:
       34:   72:    const Token& token = line[0];
       34:   72-block  0
call    0 returned 34
      34*:   73:    EXPECT_EQ(token.getType(), param.expectedType) << "Input: " << param.input;
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
       34:   73-block  0
call    3 returned 34
branch  4 taken 34 (fallthrough)
branch  5 taken 0 (throw)
       34:   73-block  1
call    6 returned 34
branch  7 taken 0 (fallthrough)
branch  8 taken 34
    %%%%%:   73-block  2
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   73-block  3
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   73-block  4
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   73-block  5
call   18 never executed
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   73-block  6
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:   73-block  7
call   25 never executed
call   26 never executed
       34:   73-block  8
call   27 returned 34
    $$$$$:   73-block  9
    $$$$$:   73-block 10
call   28 never executed
    $$$$$:   73-block 11
    $$$$$:   73-block 12
call   29 never executed
    $$$$$:   73-block 13
    $$$$$:   73-block 14
call   30 never executed
        -:   74:
       34:   75:    const auto& actualValue = token.getValue();
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   75-block  0
call    3 never executed
       34:   76:    const auto& expectedValue = param.expectedValue;
        -:   77:
       34:   78:    if (!std::holds_alternative<std::monostate>(expectedValue)) {
       34:   78-block  0
call    0 returned 34
branch  1 taken 15 (fallthrough)
branch  2 taken 19
      15*:   79:        ASSERT_EQ(actualValue.index(), expectedValue.index()) << "Mismatched ValueLiteral type for input: " << param.input;
       15:   79-block  0
call    0 returned 15
call    1 returned 15
call    2 returned 15
branch  3 taken 15 (fallthrough)
branch  4 taken 0 (throw)
       15:   79-block  1
call    5 returned 15
branch  6 taken 0 (fallthrough)
branch  7 taken 15
    %%%%%:   79-block  2
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   79-block  3
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   79-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   79-block  5
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   79-block  6
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:   79-block  7
call   24 never executed
call   25 never executed
       15:   79-block  8
       15:   79-block  9
call   26 returned 15
branch 27 taken 15 (fallthrough)
branch 28 taken 0
       15:   79-block 10
    $$$$$:   79-block 11
    $$$$$:   79-block 12
    $$$$$:   79-block 13
call   29 never executed
    $$$$$:   79-block 14
    $$$$$:   79-block 15
call   30 never executed
    $$$$$:   79-block 16
    $$$$$:   79-block 17
call   31 never executed
        -:   80:
       15:   81:        if (std::holds_alternative<int>(expectedValue)) {
       15:   81-block  0
call    0 returned 15
branch  1 taken 1
branch  2 taken 14
       1*:   82:            EXPECT_EQ(std::get<int>(actualValue), std::get<int>(expectedValue));
        1:   82-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   82-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   82-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   82-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   82-block  5
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   82-block  6
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   82-block  7
call   22 never executed
call   23 never executed
        1:   82-block  8
call   24 returned 1
    $$$$$:   82-block  9
call   25 never executed
    $$$$$:   82-block 10
    $$$$$:   82-block 11
call   26 never executed
    $$$$$:   82-block 12
    $$$$$:   82-block 13
call   27 never executed
       14:   83:        } else if (std::holds_alternative<float>(expectedValue)) {
       14:   83-block  0
call    0 returned 14
branch  1 taken 1 (fallthrough)
branch  2 taken 13
       1*:   84:            EXPECT_FLOAT_EQ(std::get<float>(actualValue), std::get<float>(expectedValue));
        1:   84-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   84-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   84-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   84-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   84-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   84-block  5
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   84-block  6
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   84-block  7
call   22 never executed
call   23 never executed
        1:   84-block  8
call   24 returned 1
    $$$$$:   84-block  9
call   25 never executed
    $$$$$:   84-block 10
    $$$$$:   84-block 11
call   26 never executed
    $$$$$:   84-block 12
    $$$$$:   84-block 13
call   27 never executed
       13:   85:        } else if (std::holds_alternative<std::string>(expectedValue)) {
       13:   85-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0
      13*:   86:            EXPECT_EQ(std::get<std::string>(actualValue), std::get<std::string>(expectedValue));
       13:   86-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   86-block  1
call    3 returned 13
branch  4 taken 13 (fallthrough)
branch  5 taken 0 (throw)
       13:   86-block  2
call    6 returned 13
branch  7 taken 13 (fallthrough)
branch  8 taken 0 (throw)
       13:   86-block  3
call    9 returned 13
branch 10 taken 0 (fallthrough)
branch 11 taken 13
    %%%%%:   86-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   86-block  5
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   86-block  6
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   86-block  7
call   22 never executed
call   23 never executed
       13:   86-block  8
call   24 returned 13
    $$$$$:   86-block  9
call   25 never executed
    $$$$$:   86-block 10
    $$$$$:   86-block 11
call   26 never executed
    $$$$$:   86-block 12
    $$$$$:   86-block 13
call   27 never executed
    #####:   87:        } else if (std::holds_alternative<bool>(expectedValue)) {
    %%%%%:   87-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   88:            EXPECT_EQ(std::get<bool>(actualValue), std::get<bool>(expectedValue));
    %%%%%:   88-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   88-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   88-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   88-block  3
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%:   88-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   88-block  5
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   88-block  6
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   88-block  7
call   22 never executed
call   23 never executed
    %%%%%:   88-block  8
call   24 never executed
    $$$$$:   88-block  9
call   25 never executed
    $$$$$:   88-block 10
    $$$$$:   88-block 11
call   26 never executed
    $$$$$:   88-block 12
    $$$$$:   88-block 13
call   27 never executed
        -:   89:        }
        -:   90:    }
       34:   91:}
       34:   91-block  0
       34:   91-block  1
call    0 returned 34
branch  1 taken 34 (fallthrough)
branch  2 taken 0
       34:   91-block  2
       34:   91-block  3
call    3 returned 34
branch  4 taken 34 (fallthrough)
branch  5 taken 0
       34:   91-block  4
       34:   91-block  5
call    6 returned 34
branch  7 taken 34 (fallthrough)
branch  8 taken 0
    $$$$$:   91-block  6
call    9 never executed
    $$$$$:   91-block  7
call   10 never executed
    $$$$$:   91-block  8
call   11 never executed
------------------
_ZN40LexerTest_ProducesExpectedTokenType_Test13AddToRegistryEv:
function _ZN40LexerTest_ProducesExpectedTokenType_Test13AddToRegistryEv called 1 returned 100% blocks executed 53%
        5:   60:TEST_P(LexerTest, ProducesExpectedTokenType) {
        1:   60-block  0
call    0 returned 1
call    1 returned 1
        1:   60-block  1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   60-block  2
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   60-block  3
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   60-block  4
        1:   60-block  5
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   60-block  6
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   60-block  7
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   60-block  8
call   20 returned 1
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0 (throw)
        1:   60-block  9
call   24 returned 1
call   25 returned 1
call   26 returned 1
call   27 returned 1
        1:   60-block 10
    $$$$$:   60-block 11
branch 28 never executed (fallthrough)
branch 29 never executed
    $$$$$:   60-block 12
call   30 never executed
    $$$$$:   60-block 13
call   31 never executed
    $$$$$:   60-block 14
call   32 never executed
    $$$$$:   60-block 15
    $$$$$:   60-block 16
    $$$$$:   60-block 17
    $$$$$:   60-block 18
call   33 never executed
    $$$$$:   60-block 19
call   34 never executed
    $$$$$:   60-block 20
    $$$$$:   60-block 21
------------------
_ZN40LexerTest_ProducesExpectedTokenType_TestC1Ev:
function _ZN40LexerTest_ProducesExpectedTokenType_TestC1Ev called 34 returned 100% blocks executed 100%
       34:   60:TEST_P(LexerTest, ProducesExpectedTokenType) {
       34:   60-block  0
call    0 returned 34
------------------
        -:   92:
        4:   93:TEST(LexerTest, TokenizeCommentedLine) {
        2:   94:    std::istringstream stream("x - 7 ~ this is a comment");
        1:   95:    PositionHandler ph("mock.vis", stream);
        1:   96:    const Lexer lexer = Lexer(ph);
        1:   97:    auto tokens = lexer.tokenise();
       1*:   98:    ASSERT_EQ(tokens.size(), 2);
        1:   99:    const auto& line = tokens.at(0);
       1*:  100:    ASSERT_EQ(line.size(), 4);
        -:  101:
       1*:  102:    EXPECT_EQ(line[0].getType(), TokenType::IDENTIFIER);
       1*:  103:    EXPECT_EQ(std::get<std::string>(line[0].getValue()), "x");
        -:  104:
       1*:  105:    EXPECT_EQ(line[1].getType(), TokenType::MINUS);
        -:  106:
       1*:  107:    EXPECT_EQ(line[2].getType(), TokenType::INT);
       1*:  108:    EXPECT_EQ(std::get<int>(line[2].getValue()), 7);
        -:  109:
       1*:  110:    EXPECT_EQ(line[3].getType(), TokenType::EOL);
        1:  111:}
------------------
_ZN36LexerTest_TokenizeCommentedLine_TestC1Ev:
function _ZN36LexerTest_TokenizeCommentedLine_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   93:TEST(LexerTest, TokenizeCommentedLine) {
        1:   93-block  0
call    0 returned 1
------------------
_ZN36LexerTest_TokenizeCommentedLine_TestD0Ev:
function _ZN36LexerTest_TokenizeCommentedLine_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   93:TEST(LexerTest, TokenizeCommentedLine) {
        1:   93-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN36LexerTest_TokenizeCommentedLine_TestD1Ev:
function _ZN36LexerTest_TokenizeCommentedLine_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   93:TEST(LexerTest, TokenizeCommentedLine) {
        1:   93-block  0
call    0 returned 1
------------------
_ZN36LexerTest_TokenizeCommentedLine_Test8TestBodyEv:
function _ZN36LexerTest_TokenizeCommentedLine_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:   93:TEST(LexerTest, TokenizeCommentedLine) {
        1:   93-block  0
        2:   94:    std::istringstream stream("x - 7 ~ this is a comment");
        1:   94-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   94-block  2
call    6 returned 1
    $$$$$:   94-block  3
call    7 never executed
    $$$$$:   94-block  4
    $$$$$:   94-block  5
        1:   95:    PositionHandler ph("mock.vis", stream);
        1:   95-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   95-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   95-block  2
call    6 returned 1
    $$$$$:   95-block  3
call    7 never executed
    $$$$$:   95-block  4
    $$$$$:   95-block  5
        1:   96:    const Lexer lexer = Lexer(ph);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   97:    auto tokens = lexer.tokenise();
        1:   97-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   98:    ASSERT_EQ(tokens.size(), 2);
        1:   98-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   98-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   98-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   98-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   98-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   98-block  5
call   17 never executed
call   18 never executed
        1:   98-block  6
        1:   98-block  7
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:   98-block  8
    $$$$$:   98-block  9
    $$$$$:   98-block 10
    $$$$$:   98-block 11
call   22 never executed
    $$$$$:   98-block 12
    $$$$$:   98-block 13
call   23 never executed
    $$$$$:   98-block 14
    $$$$$:   98-block 15
call   24 never executed
        1:   99:    const auto& line = tokens.at(0);
        1:   99-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   99-block  1
       1*:  100:    ASSERT_EQ(line.size(), 4);
        1:  100-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  100-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  100-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  100-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:  100-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  100-block  5
call   17 never executed
call   18 never executed
        1:  100-block  6
        1:  100-block  7
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  100-block  8
    $$$$$:  100-block  9
    $$$$$:  100-block 10
    $$$$$:  100-block 11
call   22 never executed
    $$$$$:  100-block 12
    $$$$$:  100-block 13
call   23 never executed
    $$$$$:  100-block 14
    $$$$$:  100-block 15
call   24 never executed
        -:  101:
       1*:  102:    EXPECT_EQ(line[0].getType(), TokenType::IDENTIFIER);
        1:  102-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  102-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  102-block  2
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  102-block  3
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  102-block  4
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  102-block  5
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  102-block  6
call   20 never executed
call   21 never executed
        1:  102-block  7
call   22 returned 1
    $$$$$:  102-block  8
    $$$$$:  102-block  9
    $$$$$:  102-block 10
call   23 never executed
    $$$$$:  102-block 11
    $$$$$:  102-block 12
call   24 never executed
    $$$$$:  102-block 13
    $$$$$:  102-block 14
call   25 never executed
       1*:  103:    EXPECT_EQ(std::get<std::string>(line[0].getValue()), "x");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  103-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  103-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  103-block  2
call   10 returned 1
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:  103-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  103-block  4
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  103-block  5
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:  103-block  6
call   24 never executed
call   25 never executed
        1:  103-block  7
call   26 returned 1
    $$$$$:  103-block  8
call   27 never executed
    $$$$$:  103-block  9
    $$$$$:  103-block 10
call   28 never executed
    $$$$$:  103-block 11
    $$$$$:  103-block 12
call   29 never executed
    $$$$$:  103-block 13
    $$$$$:  103-block 14
call   30 never executed
        -:  104:
       1*:  105:    EXPECT_EQ(line[1].getType(), TokenType::MINUS);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  105-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  105-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  105-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  105-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  105-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  105-block  5
call   20 never executed
call   21 never executed
        1:  105-block  6
call   22 returned 1
    $$$$$:  105-block  7
    $$$$$:  105-block  8
    $$$$$:  105-block  9
call   23 never executed
    $$$$$:  105-block 10
    $$$$$:  105-block 11
call   24 never executed
    $$$$$:  105-block 12
    $$$$$:  105-block 13
call   25 never executed
        -:  106:
       1*:  107:    EXPECT_EQ(line[2].getType(), TokenType::INT);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  107-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  107-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  107-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  107-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  107-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  107-block  5
call   20 never executed
call   21 never executed
        1:  107-block  6
call   22 returned 1
    $$$$$:  107-block  7
    $$$$$:  107-block  8
    $$$$$:  107-block  9
call   23 never executed
    $$$$$:  107-block 10
    $$$$$:  107-block 11
call   24 never executed
    $$$$$:  107-block 12
    $$$$$:  107-block 13
call   25 never executed
       1*:  108:    EXPECT_EQ(std::get<int>(line[2].getValue()), 7);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  108-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  108-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  108-block  2
call   10 returned 1
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:  108-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  108-block  4
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  108-block  5
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:  108-block  6
call   24 never executed
call   25 never executed
        1:  108-block  7
call   26 returned 1
    $$$$$:  108-block  8
call   27 never executed
    $$$$$:  108-block  9
    $$$$$:  108-block 10
    $$$$$:  108-block 11
call   28 never executed
    $$$$$:  108-block 12
    $$$$$:  108-block 13
call   29 never executed
    $$$$$:  108-block 14
    $$$$$:  108-block 15
call   30 never executed
        -:  109:
       1*:  110:    EXPECT_EQ(line[3].getType(), TokenType::EOL);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  110-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  110-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  110-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  110-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  110-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  110-block  5
call   20 never executed
call   21 never executed
        1:  110-block  6
call   22 returned 1
    $$$$$:  110-block  7
    $$$$$:  110-block  8
    $$$$$:  110-block  9
call   23 never executed
    $$$$$:  110-block 10
    $$$$$:  110-block 11
call   24 never executed
    $$$$$:  110-block 12
    $$$$$:  110-block 13
call   25 never executed
        1:  111:}
        1:  111-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:  111-block  1
        1:  111-block  2
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:  111-block  3
        1:  111-block  4
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
    $$$$$:  111-block  5
call    9 never executed
    $$$$$:  111-block  6
call   10 never executed
    $$$$$:  111-block  7
call   11 never executed
------------------
        -:  112:
        4:  113:TEST(LexerTest, MakeNumberTokenFail) {
        2:  114:    std::istringstream stream("5.5.5");
        1:  115:    PositionHandler ph("mock.vis", stream);
        1:  116:    const Lexer lexer = Lexer(ph);
       1*:  117:    EXPECT_THROW(lexer.tokenise(), IllegalCharError);
        1:  118:}
------------------
_ZN34LexerTest_MakeNumberTokenFail_TestC1Ev:
function _ZN34LexerTest_MakeNumberTokenFail_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  113:TEST(LexerTest, MakeNumberTokenFail) {
        1:  113-block  0
call    0 returned 1
------------------
_ZN34LexerTest_MakeNumberTokenFail_TestD0Ev:
function _ZN34LexerTest_MakeNumberTokenFail_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  113:TEST(LexerTest, MakeNumberTokenFail) {
        1:  113-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN34LexerTest_MakeNumberTokenFail_TestD1Ev:
function _ZN34LexerTest_MakeNumberTokenFail_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  113:TEST(LexerTest, MakeNumberTokenFail) {
        1:  113-block  0
call    0 returned 1
------------------
_ZN34LexerTest_MakeNumberTokenFail_Test8TestBodyEv:
function _ZN34LexerTest_MakeNumberTokenFail_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  113:TEST(LexerTest, MakeNumberTokenFail) {
        1:  113-block  0
        2:  114:    std::istringstream stream("5.5.5");
        1:  114-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  114-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  114-block  2
call    6 returned 1
    $$$$$:  114-block  3
call    7 never executed
    $$$$$:  114-block  4
    $$$$$:  114-block  5
        1:  115:    PositionHandler ph("mock.vis", stream);
        1:  115-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  115-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  115-block  2
call    6 returned 1
    $$$$$:  115-block  3
call    7 never executed
    $$$$$:  115-block  4
    $$$$$:  115-block  5
        1:  116:    const Lexer lexer = Lexer(ph);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  117:    EXPECT_THROW(lexer.tokenise(), IllegalCharError);
        1:  117-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  117-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  117-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:  117-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  117-block  4
call   12 never executed
        1:  117-block  5
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:  117-block  6
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  117-block  7
    %%%%%:  117-block  8
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  117-block  9
call   21 never executed
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:  117-block 10
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:  117-block 11
call   28 never executed
call   29 never executed
        1:  117-block 12
call   30 returned 1
        1:  117-block 13
        1:  117-block 14
branch 31 taken 1
branch 32 taken 0
branch 33 taken 0
        1:  117-block 15
call   34 returned 1
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
    $$$$$:  117-block 16
call   38 never executed
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    $$$$$:  117-block 17
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    $$$$$:  117-block 18
call   45 never executed
branch 46 never executed (fallthrough)
branch 47 never executed (throw)
    $$$$$:  117-block 19
call   48 never executed
call   49 never executed
branch 50 never executed (fallthrough)
branch 51 never executed (throw)
    $$$$$:  117-block 20
call   52 never executed
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    $$$$$:  117-block 21
call   56 never executed
branch 57 never executed (fallthrough)
branch 58 never executed (throw)
    $$$$$:  117-block 22
    $$$$$:  117-block 23
call   59 never executed
    $$$$$:  117-block 24
call   60 never executed
call   61 never executed
branch 62 never executed (fallthrough)
branch 63 never executed (throw)
    $$$$$:  117-block 25
    $$$$$:  117-block 26
call   64 never executed
branch 65 never executed (fallthrough)
branch 66 never executed (throw)
    $$$$$:  117-block 27
call   67 never executed
    $$$$$:  117-block 28
    $$$$$:  117-block 29
call   68 never executed
    $$$$$:  117-block 30
call   69 never executed
    $$$$$:  117-block 31
call   70 never executed
    $$$$$:  117-block 32
    $$$$$:  117-block 33
call   71 never executed
    $$$$$:  117-block 34
    $$$$$:  117-block 35
call   72 never executed
        1:  118:}
call    0 returned 1
call    1 returned 1
    $$$$$:  118-block  0
call    2 never executed
    $$$$$:  118-block  1
call    3 never executed
------------------
        -:  119:
        4:  120:TEST(LexerTest, MakeStringTokenFail) {
        2:  121:    std::istringstream stream("\"testString");
        1:  122:    PositionHandler ph("mock.vis", stream);
        1:  123:    const Lexer lexer = Lexer(ph);
       1*:  124:    EXPECT_THROW(lexer.tokenise(), InvalidSyntaxError);
        1:  125:}
------------------
_ZN34LexerTest_MakeStringTokenFail_TestC1Ev:
function _ZN34LexerTest_MakeStringTokenFail_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  120:TEST(LexerTest, MakeStringTokenFail) {
        1:  120-block  0
call    0 returned 1
------------------
_ZN34LexerTest_MakeStringTokenFail_TestD0Ev:
function _ZN34LexerTest_MakeStringTokenFail_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  120:TEST(LexerTest, MakeStringTokenFail) {
        1:  120-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN34LexerTest_MakeStringTokenFail_TestD1Ev:
function _ZN34LexerTest_MakeStringTokenFail_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  120:TEST(LexerTest, MakeStringTokenFail) {
        1:  120-block  0
call    0 returned 1
------------------
_ZN34LexerTest_MakeStringTokenFail_Test8TestBodyEv:
function _ZN34LexerTest_MakeStringTokenFail_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  120:TEST(LexerTest, MakeStringTokenFail) {
        1:  120-block  0
        2:  121:    std::istringstream stream("\"testString");
        1:  121-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  121-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  121-block  2
call    6 returned 1
    $$$$$:  121-block  3
call    7 never executed
    $$$$$:  121-block  4
    $$$$$:  121-block  5
        1:  122:    PositionHandler ph("mock.vis", stream);
        1:  122-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  122-block  2
call    6 returned 1
    $$$$$:  122-block  3
call    7 never executed
    $$$$$:  122-block  4
    $$$$$:  122-block  5
        1:  123:    const Lexer lexer = Lexer(ph);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  124:    EXPECT_THROW(lexer.tokenise(), InvalidSyntaxError);
        1:  124-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  124-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  124-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:  124-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  124-block  4
call   12 never executed
        1:  124-block  5
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:  124-block  6
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  124-block  7
    %%%%%:  124-block  8
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  124-block  9
call   21 never executed
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:  124-block 10
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:  124-block 11
call   28 never executed
call   29 never executed
        1:  124-block 12
call   30 returned 1
        1:  124-block 13
        1:  124-block 14
branch 31 taken 1
branch 32 taken 0
branch 33 taken 0
        1:  124-block 15
call   34 returned 1
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
    $$$$$:  124-block 16
call   38 never executed
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    $$$$$:  124-block 17
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    $$$$$:  124-block 18
call   45 never executed
branch 46 never executed (fallthrough)
branch 47 never executed (throw)
    $$$$$:  124-block 19
call   48 never executed
call   49 never executed
branch 50 never executed (fallthrough)
branch 51 never executed (throw)
    $$$$$:  124-block 20
call   52 never executed
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    $$$$$:  124-block 21
call   56 never executed
branch 57 never executed (fallthrough)
branch 58 never executed (throw)
    $$$$$:  124-block 22
    $$$$$:  124-block 23
call   59 never executed
    $$$$$:  124-block 24
call   60 never executed
call   61 never executed
branch 62 never executed (fallthrough)
branch 63 never executed (throw)
    $$$$$:  124-block 25
    $$$$$:  124-block 26
call   64 never executed
branch 65 never executed (fallthrough)
branch 66 never executed (throw)
    $$$$$:  124-block 27
call   67 never executed
    $$$$$:  124-block 28
    $$$$$:  124-block 29
call   68 never executed
    $$$$$:  124-block 30
call   69 never executed
    $$$$$:  124-block 31
call   70 never executed
    $$$$$:  124-block 32
    $$$$$:  124-block 33
call   71 never executed
    $$$$$:  124-block 34
    $$$$$:  124-block 35
call   72 never executed
        1:  125:}
call    0 returned 1
call    1 returned 1
    $$$$$:  125-block  0
call    2 never executed
    $$$$$:  125-block  1
call    3 never executed
------------------
        -:  126:
        4:  127:TEST(LexerTest, MakeNotEqualsTokenFail) {
        2:  128:    std::istringstream stream("!");
        1:  129:    PositionHandler ph("mock.vis", stream);
        1:  130:    const Lexer lexer = Lexer(ph);
       1*:  131:    EXPECT_THROW(lexer.tokenise(), ExpectedCharError);
        1:  132:}
------------------
_ZN37LexerTest_MakeNotEqualsTokenFail_TestC1Ev:
function _ZN37LexerTest_MakeNotEqualsTokenFail_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST(LexerTest, MakeNotEqualsTokenFail) {
        1:  127-block  0
call    0 returned 1
------------------
_ZN37LexerTest_MakeNotEqualsTokenFail_TestD0Ev:
function _ZN37LexerTest_MakeNotEqualsTokenFail_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST(LexerTest, MakeNotEqualsTokenFail) {
        1:  127-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN37LexerTest_MakeNotEqualsTokenFail_TestD1Ev:
function _ZN37LexerTest_MakeNotEqualsTokenFail_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST(LexerTest, MakeNotEqualsTokenFail) {
        1:  127-block  0
call    0 returned 1
------------------
_ZN37LexerTest_MakeNotEqualsTokenFail_Test8TestBodyEv:
function _ZN37LexerTest_MakeNotEqualsTokenFail_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  127:TEST(LexerTest, MakeNotEqualsTokenFail) {
        1:  127-block  0
        2:  128:    std::istringstream stream("!");
        1:  128-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  128-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  128-block  2
call    6 returned 1
    $$$$$:  128-block  3
call    7 never executed
    $$$$$:  128-block  4
    $$$$$:  128-block  5
        1:  129:    PositionHandler ph("mock.vis", stream);
        1:  129-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  129-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  129-block  2
call    6 returned 1
    $$$$$:  129-block  3
call    7 never executed
    $$$$$:  129-block  4
    $$$$$:  129-block  5
        1:  130:    const Lexer lexer = Lexer(ph);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  131:    EXPECT_THROW(lexer.tokenise(), ExpectedCharError);
        1:  131-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  131-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  131-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:  131-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  131-block  4
call   12 never executed
        1:  131-block  5
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:  131-block  6
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  131-block  7
    %%%%%:  131-block  8
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  131-block  9
call   21 never executed
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:  131-block 10
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:  131-block 11
call   28 never executed
call   29 never executed
        1:  131-block 12
call   30 returned 1
        1:  131-block 13
        1:  131-block 14
branch 31 taken 1
branch 32 taken 0
branch 33 taken 0
        1:  131-block 15
call   34 returned 1
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
    $$$$$:  131-block 16
call   38 never executed
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    $$$$$:  131-block 17
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    $$$$$:  131-block 18
call   45 never executed
branch 46 never executed (fallthrough)
branch 47 never executed (throw)
    $$$$$:  131-block 19
call   48 never executed
call   49 never executed
branch 50 never executed (fallthrough)
branch 51 never executed (throw)
    $$$$$:  131-block 20
call   52 never executed
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    $$$$$:  131-block 21
call   56 never executed
branch 57 never executed (fallthrough)
branch 58 never executed (throw)
    $$$$$:  131-block 22
    $$$$$:  131-block 23
call   59 never executed
    $$$$$:  131-block 24
call   60 never executed
call   61 never executed
branch 62 never executed (fallthrough)
branch 63 never executed (throw)
    $$$$$:  131-block 25
    $$$$$:  131-block 26
call   64 never executed
branch 65 never executed (fallthrough)
branch 66 never executed (throw)
    $$$$$:  131-block 27
call   67 never executed
    $$$$$:  131-block 28
    $$$$$:  131-block 29
call   68 never executed
    $$$$$:  131-block 30
call   69 never executed
    $$$$$:  131-block 31
call   70 never executed
    $$$$$:  131-block 32
    $$$$$:  131-block 33
call   71 never executed
    $$$$$:  131-block 34
    $$$$$:  131-block 35
call   72 never executed
        1:  132:}
call    0 returned 1
call    1 returned 1
    $$$$$:  132-block  0
call    2 never executed
    $$$$$:  132-block  1
call    3 never executed
------------------
        -:  133:
        4:  134:TEST(LexerTest, TokenizeUnrecognisedChar) {
        2:  135:    std::istringstream stream("|");
        1:  136:    PositionHandler ph("mock.vis", stream);
        1:  137:    const Lexer lexer = Lexer(ph);
       1*:  138:    EXPECT_THROW(lexer.tokenise(), IllegalCharError);
        -:  139:
        1:  140:}
------------------
_ZN39LexerTest_TokenizeUnrecognisedChar_TestC1Ev:
function _ZN39LexerTest_TokenizeUnrecognisedChar_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST(LexerTest, TokenizeUnrecognisedChar) {
        1:  134-block  0
call    0 returned 1
------------------
_ZN39LexerTest_TokenizeUnrecognisedChar_TestD0Ev:
function _ZN39LexerTest_TokenizeUnrecognisedChar_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST(LexerTest, TokenizeUnrecognisedChar) {
        1:  134-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN39LexerTest_TokenizeUnrecognisedChar_TestD1Ev:
function _ZN39LexerTest_TokenizeUnrecognisedChar_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST(LexerTest, TokenizeUnrecognisedChar) {
        1:  134-block  0
call    0 returned 1
------------------
_ZN39LexerTest_TokenizeUnrecognisedChar_Test8TestBodyEv:
function _ZN39LexerTest_TokenizeUnrecognisedChar_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  134:TEST(LexerTest, TokenizeUnrecognisedChar) {
        1:  134-block  0
        2:  135:    std::istringstream stream("|");
        1:  135-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  135-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  135-block  2
call    6 returned 1
    $$$$$:  135-block  3
call    7 never executed
    $$$$$:  135-block  4
    $$$$$:  135-block  5
        1:  136:    PositionHandler ph("mock.vis", stream);
        1:  136-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  136-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  136-block  2
call    6 returned 1
    $$$$$:  136-block  3
call    7 never executed
    $$$$$:  136-block  4
    $$$$$:  136-block  5
        1:  137:    const Lexer lexer = Lexer(ph);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  138:    EXPECT_THROW(lexer.tokenise(), IllegalCharError);
        1:  138-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  138-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  138-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:  138-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  138-block  4
call   12 never executed
        1:  138-block  5
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:  138-block  6
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  138-block  7
    %%%%%:  138-block  8
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  138-block  9
call   21 never executed
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:  138-block 10
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:  138-block 11
call   28 never executed
call   29 never executed
        1:  138-block 12
call   30 returned 1
        1:  138-block 13
        1:  138-block 14
branch 31 taken 1
branch 32 taken 0
branch 33 taken 0
        1:  138-block 15
call   34 returned 1
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
    $$$$$:  138-block 16
call   38 never executed
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    $$$$$:  138-block 17
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    $$$$$:  138-block 18
call   45 never executed
branch 46 never executed (fallthrough)
branch 47 never executed (throw)
    $$$$$:  138-block 19
call   48 never executed
call   49 never executed
branch 50 never executed (fallthrough)
branch 51 never executed (throw)
    $$$$$:  138-block 20
call   52 never executed
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    $$$$$:  138-block 21
call   56 never executed
branch 57 never executed (fallthrough)
branch 58 never executed (throw)
    $$$$$:  138-block 22
    $$$$$:  138-block 23
call   59 never executed
    $$$$$:  138-block 24
call   60 never executed
call   61 never executed
branch 62 never executed (fallthrough)
branch 63 never executed (throw)
    $$$$$:  138-block 25
    $$$$$:  138-block 26
call   64 never executed
branch 65 never executed (fallthrough)
branch 66 never executed (throw)
    $$$$$:  138-block 27
call   67 never executed
    $$$$$:  138-block 28
    $$$$$:  138-block 29
call   68 never executed
    $$$$$:  138-block 30
call   69 never executed
    $$$$$:  138-block 31
call   70 never executed
    $$$$$:  138-block 32
    $$$$$:  138-block 33
call   71 never executed
    $$$$$:  138-block 34
    $$$$$:  138-block 35
call   72 never executed
        -:  139:
        1:  140:}
call    0 returned 1
call    1 returned 1
    $$$$$:  140-block  0
call    2 never executed
    $$$$$:  140-block  1
call    3 never executed
------------------
        -:  141:
        -:  142:
